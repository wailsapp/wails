name: PR Checks

on:
  pull_request:
  pull_request_review:
    types: [submitted]

jobs:
  check_docs:
    name: Check Docs
    if: ${{github.repository == 'wailsapp/wails' && contains(github.head_ref,'feature/')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v17
        id: verify-changed-files
        with:
          files: |
            website/**/*.mdx
            website/**/*.md

      - name: Run step only when files change.
        if: steps.verify-changed-files.outputs.files_changed != 'true'
        run: |
          echo "::warning::Feature branch does not contain any changes to the website."

#  lint_go:
#    name: Run Go Linters
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup Go
#        uses: actions/setup-go@v4
#        with:
#          go-version: "1.21"
#
#      - name: Update go modules
#        working-directory: ./v2
#        run: go mod tidy
#
#      - name: Run Linter
#        uses: golangci/golangci-lint-action@v3
#        with:
#          version: v1.54
#          working-directory: ./v2
#          args: --timeout=10m0s --config ./.golangci.yml

  test_go:
    name: Run Go Tests
    runs-on: ${{ matrix.os }}
    if: github.event.review.state == 'approved'
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest, ubuntu-24.04]
        go-version: ['1.21']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install linux dependencies ( 22.04 )
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt-get update -y && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev build-essential pkg-config

      - name: Install linux dependencies ( 24.04 )
        if: matrix.os == 'ubuntu-24.04'
        run: sudo apt-get update -y && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev build-essential pkg-config

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run tests (mac)
        if: matrix.os == 'macos-latest'
        env:
          CGO_LDFLAGS: -framework UniformTypeIdentifiers -mmacosx-version-min=10.13
        working-directory: ./v2
        run: go test -v ./...

      - name: Run tests (!mac)
        if: matrix.os != 'macos-latest' && matrix.os != 'ubuntu-24.04'
        working-directory: ./v2
        run: go test -v ./...

      - name: Run tests (Ubuntu 24.04)
        if: matrix.os == 'ubuntu-24.04'
        working-directory: ./v2
        run: go test -v -tags webkit2_41 ./...
