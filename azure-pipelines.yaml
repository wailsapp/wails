trigger:
- master

pr:
- develop

strategy:
  matrix:
    linux:
      imageName: "ubuntu-16.04"
    mac:
      imageName: "macos-10.13"
    windows:
      imageName: "vs2017-win2016"
  maxParallel: 3

pool:
  vmImage: $(imageName)

variables:
  GOPATH: '$(Agent.BuildDirectory)/gopath' # Go workspace path
  GOROOT: '$(Agent.BuildDirectory)/go' # Go installation path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOMODULE: 'on'
  modulePath: '$(Agent.BuildDirectory)/wails' # Path to the module's code

steps:
- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  clean: true  # whether to fetch clean each time
  path: wails  # path to check out source code, relative to the agent's build directory (e.g. \_work\1)

- script: |
    wget "https://storage.googleapis.com/golang/go1.12.7.linux-amd64.tar.gz" --output-document "$(Agent.BuildDirectory)/go1.12.7.tar.gz"
    tar -C '$(Agent.BuildDirectory)' -xzf "$(Agent.BuildDirectory)/go1.12.7.tar.gz"
    condition: eq( variables['Agent.OS'], 'Linux', 'Darwin' )
    displayName: 'Install Go 1.12.7'

- script: |
    echo stop
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: 'Install Go 1.12.7'

- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(GOROOT)'
    shopt -s extglob
    shopt -s dotglob
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -d ./...
    cd cmd/wails
    go install
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- script: |
    wails version
  workingDirectory: '$(modulePath)'
  displayName: 'Check we have output'