// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "/wails/runtime.js";

/**
 * @returns {Promise<string> & { cancel(): void }}
 */
export function Close() {
    let $resultPromise = /** @type {any} */($Call.ByID(1888105376));
    return $resultPromise;
}

/**
 * @param {string} query
 * @param {any[]} args
 * @returns {Promise<void> & { cancel(): void }}
 */
export function Execute(query, ...args) {
    let $resultPromise = /** @type {any} */($Call.ByID(3811930203, query, args));
    return $resultPromise;
}

/**
 * @param {string} dbPath
 * @returns {Promise<string> & { cancel(): void }}
 */
export function Open(dbPath) {
    let $resultPromise = /** @type {any} */($Call.ByID(2012175612, dbPath));
    return $resultPromise;
}

/**
 * @param {string} query
 * @param {any[]} args
 * @returns {Promise<{ [_: string]: any }[]> & { cancel(): void }}
 */
export function Select(query, ...args) {
    let $resultPromise = /** @type {any} */($Call.ByID(2472933124, query, args));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

// Private type creation functions
const $$createType0 = $Create.Map($Create.Any, $Create.Any);
const $$createType1 = $Create.Array($$createType0);
