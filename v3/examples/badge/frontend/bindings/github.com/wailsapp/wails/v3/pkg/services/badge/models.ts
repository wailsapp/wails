// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as color$0 from "../../../../../../../image/color/models.js";

export class Options {
    "TextColour": color$0.RGBA;
    "BackgroundColour": color$0.RGBA;
    "FontName": string;
    "FontSize": number;
    "SmallFontSize": number;

    /** Creates a new Options instance. */
    constructor($$source: Partial<Options> = {}) {
        if (!("TextColour" in $$source)) {
            this["TextColour"] = (new color$0.RGBA());
        }
        if (!("BackgroundColour" in $$source)) {
            this["BackgroundColour"] = (new color$0.RGBA());
        }
        if (!("FontName" in $$source)) {
            this["FontName"] = "";
        }
        if (!("FontSize" in $$source)) {
            this["FontSize"] = 0;
        }
        if (!("SmallFontSize" in $$source)) {
            this["SmallFontSize"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Options instance from a string or object.
     */
    static createFrom($$source: any = {}): Options {
        const $$createField0_0 = $$createType0;
        const $$createField1_0 = $$createType0;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("TextColour" in $$parsedSource) {
            $$parsedSource["TextColour"] = $$createField0_0($$parsedSource["TextColour"]);
        }
        if ("BackgroundColour" in $$parsedSource) {
            $$parsedSource["BackgroundColour"] = $$createField1_0($$parsedSource["BackgroundColour"]);
        }
        return new Options($$parsedSource as Partial<Options>);
    }
}

// Private type creation functions
const $$createType0 = color$0.RGBA.createFrom;
