// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT


// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $internal from "./internal.js";

/**
 * @typedef {Object} Embedded1
 * @property {number} Friends - Friends should be shadowed in Person by a field of lesser depth
 * @property {number} Vanish - Vanish should be omitted from Person because there is another field with same depth and no tag
 * @property {string} StillThere - StillThere should be shadowed in Person by other field with same depth and a json tag
 * @property {`${boolean}`} NamingThingsIsHard - NamingThingsIsHard is a law of programming
 */

/**
 * @typedef {string} Embedded3
 */

/**
 * Person represents a person
 * @typedef { {
 *     "Titles"?: Title[] | null,
 *     "Names": string[] | null,
 *     "Partner": Person | null,
 *     "Friends": (Person | null)[] | null,
 *     "NamingThingsIsHard": `${boolean}`,
 *     "StillThere": Embedded3 | null,
 *     "-": number,
 *     "Embedded3": Embedded3,
 *     "StrangerNumber": `${number}`,
 *     "StrangestString"?: `"${string}"`,
 *     "StringStrangest"?: `"${string}"`,
 *     "emb4"?: $internal.embedded4,
 * } } Person
 */

/**
 * Title is a title
 * @readonly
 * @enum {string}
 */
export const Title = {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero: "",

    /**
     * Mister is a title
     */
    Mister: "Mr",
    Miss: "Miss",
    Ms: "Ms",
    Mrs: "Mrs",
    Dr: "Dr",
};
