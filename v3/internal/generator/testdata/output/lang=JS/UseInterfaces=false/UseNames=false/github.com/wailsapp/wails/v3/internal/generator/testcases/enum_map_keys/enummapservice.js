// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * EnumMapService tests various enum map key scenarios
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "/wails/runtime.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * GetColorCodes returns a map with uint8 enum keys
 * @returns {$CancellablePromise<{ [_ in $models.Color]: string }>}
 */
export function GetColorCodes() {
    return $Call.ByID(2794981443).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType0($result);
    }));
}

/**
 * GetNestedEnumMap returns a map with enum keys and complex values
 * @returns {$CancellablePromise<{ [_ in $models.Status]: { [_ in $models.Priority]: string } }>}
 */
export function GetNestedEnumMap() {
    return $Call.ByID(3603489560).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * GetOptionalEnumMap returns a map with enum keys to optional values
 * @returns {$CancellablePromise<{ [_ in $models.Status]: string | null }>}
 */
export function GetOptionalEnumMap() {
    return $Call.ByID(1871606385).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType3($result);
    }));
}

/**
 * GetPersonsByStatus returns a map with enum keys to struct values
 * @returns {$CancellablePromise<{ [_ in $models.Status]: $models.Person[] }>}
 */
export function GetPersonsByStatus() {
    return $Call.ByID(2189502217).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType6($result);
    }));
}

/**
 * GetPriorityWeights returns a map with integer enum keys
 * @returns {$CancellablePromise<{ [_ in $models.Priority]: number }>}
 */
export function GetPriorityWeights() {
    return $Call.ByID(1542216941).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType7($result);
    }));
}

/**
 * GetStatusMessages returns a map with string enum keys
 * @returns {$CancellablePromise<{ [_ in $models.Status]: string }>}
 */
export function GetStatusMessages() {
    return $Call.ByID(1788640810).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType8($result);
    }));
}

// Private type creation functions
const $$createType0 = $Create.Map($Create.Any, $Create.Any);
const $$createType1 = $Create.Map($Create.Any, $Create.Any);
const $$createType2 = $Create.Map($Create.Any, $$createType1);
const $$createType3 = $Create.Map($Create.Any, $Create.Any);
const $$createType4 = $models.Person.createFrom;
const $$createType5 = $Create.Array($$createType4);
const $$createType6 = $Create.Map($Create.Any, $$createType5);
const $$createType7 = $Create.Map($Create.Any, $Create.Any);
const $$createType8 = $Create.Map($Create.Any, $Create.Any);
