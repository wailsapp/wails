// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * GreetService is great
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "/wails/runtime.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as nobindingshere$0 from "../no_bindings_here/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * Get someone.
 * @param {$models.Alias} aliasValue
 * @returns {$CancellablePromise<$models.Person>}
 */
export function Get(aliasValue) {
    return $Call.ByID(1928502664, aliasValue).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType0($result);
    }));
}

/**
 * Apparently, aliases are all the rage right now.
 * @param {$models.AliasedPerson} p
 * @returns {$CancellablePromise<$models.StrangelyAliasedPerson>}
 */
export function GetButAliased(p) {
    return $Call.ByID(1896499664, p).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType0($result);
    }));
}

/**
 * Get someone quite different.
 * @returns {$CancellablePromise<$models.GenericPerson<boolean>>}
 */
export function GetButDifferent() {
    return $Call.ByID(2240931744).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * @returns {$CancellablePromise<nobindingshere$0.PrivatePerson>}
 */
export function GetButForeignPrivateAlias() {
    return $Call.ByID(643456960).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * @returns {$CancellablePromise<$models.AliasGroup>}
 */
export function GetButGenericAliases() {
    return $Call.ByID(914093800).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType3($result);
    }));
}

/**
 * Greet a lot of unusual things.
 * @param {$models.EmptyAliasStruct} $0
 * @param {$models.EmptyStruct} $1
 * @returns {$CancellablePromise<$models.AliasStruct>}
 */
export function Greet($0, $1) {
    return $Call.ByID(1411160069, $0, $1).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType7($result);
    }));
}

// Private type creation functions
const $$createType0 = $models.Person.createFrom;
const $$createType1 = $models.GenericPerson.createFrom($Create.Any);
const $$createType2 = nobindingshere$0.personImpl.createFrom;
const $$createType3 = $models.AliasGroup.createFrom;
const $$createType4 = $Create.Array($Create.Any);
const $$createType5 = $Create.Array($Create.Any);
const $$createType6 = $Create.Struct({
    "NoMoreIdeas": $$createType5,
});
const $$createType7 = $Create.Struct({
    "Foo": $$createType4,
    "Other": $$createType6,
});
