// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * GreetService is great
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "/wails/runtime.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * GetTitleMap returns a map with enum keys - this should generate correct TypeScript
 * @returns {$CancellablePromise<{ [_ in $models.Title]: string }>}
 */
export function GetTitleMap() {
    return $Call.ByID(1993183304).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType0($result);
    }));
}

/**
 * Greet does XYZ
 * @param {string} name
 * @param {$models.Title} title
 * @returns {$CancellablePromise<string>}
 */
export function Greet(name, title) {
    return $Call.ByID(1411160069, name, title);
}

/**
 * NewPerson creates a new person
 * @param {string} name
 * @returns {$CancellablePromise<$models.Person | null>}
 */
export function NewPerson(name) {
    return $Call.ByID(1661412647, name).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

// Private type creation functions
const $$createType0 = $Create.Map($Create.Any, $Create.Any);
const $$createType1 = $models.Person.createFrom;
const $$createType2 = $Create.Nullable($$createType1);
