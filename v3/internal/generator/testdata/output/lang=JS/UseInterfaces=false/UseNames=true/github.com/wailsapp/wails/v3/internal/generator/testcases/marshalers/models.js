// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "/wails/runtime.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as encoding$0 from "../../../../../../../../encoding/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as json$0 from "../../../../../../../../encoding/json/models.js";

/**
 * any
 * @typedef {any} AliasJsonMarshaler
 */

/**
 * any
 * @typedef {any} AliasMarshaler
 */

/**
 * struct{}
 * @typedef { {
 * } } AliasNonMarshaler
 */

/**
 * string
 * @typedef {string} AliasTextMarshaler
 */

export class Data {
    /**
     * Creates a new Data instance.
     * @param {Partial<Data>} [$$source = {}] - The source object to create the Data.
     */
    constructor($$source = {}) {
        if (!("NM" in $$source)) {
            /**
             * @member
             * @type {NonMarshaler}
             */
            this["NM"] = (new NonMarshaler());
        }
        if (!("NMPtr" in $$source)) {
            /**
             * NonMarshaler | null
             * @member
             * @type {NonMarshaler | null}
             */
            this["NMPtr"] = null;
        }
        if (!("VJM" in $$source)) {
            /**
             * @member
             * @type {ValueJsonMarshaler}
             */
            this["VJM"] = null;
        }
        if (!("VJMPtr" in $$source)) {
            /**
             * ValueJsonMarshaler | null
             * @member
             * @type {ValueJsonMarshaler | null}
             */
            this["VJMPtr"] = null;
        }
        if (!("PJM" in $$source)) {
            /**
             * @member
             * @type {PointerJsonMarshaler}
             */
            this["PJM"] = null;
        }
        if (!("PJMPtr" in $$source)) {
            /**
             * PointerJsonMarshaler | null
             * @member
             * @type {PointerJsonMarshaler | null}
             */
            this["PJMPtr"] = null;
        }
        if (!("VTM" in $$source)) {
            /**
             * @member
             * @type {ValueTextMarshaler}
             */
            this["VTM"] = "";
        }
        if (!("VTMPtr" in $$source)) {
            /**
             * ValueTextMarshaler | null
             * @member
             * @type {ValueTextMarshaler | null}
             */
            this["VTMPtr"] = null;
        }
        if (!("PTM" in $$source)) {
            /**
             * @member
             * @type {PointerTextMarshaler}
             */
            this["PTM"] = "";
        }
        if (!("PTMPtr" in $$source)) {
            /**
             * PointerTextMarshaler | null
             * @member
             * @type {PointerTextMarshaler | null}
             */
            this["PTMPtr"] = null;
        }
        if (!("VM" in $$source)) {
            /**
             * @member
             * @type {ValueMarshaler}
             */
            this["VM"] = null;
        }
        if (!("VMPtr" in $$source)) {
            /**
             * ValueMarshaler | null
             * @member
             * @type {ValueMarshaler | null}
             */
            this["VMPtr"] = null;
        }
        if (!("PM" in $$source)) {
            /**
             * @member
             * @type {PointerMarshaler}
             */
            this["PM"] = null;
        }
        if (!("PMPtr" in $$source)) {
            /**
             * PointerMarshaler | null
             * @member
             * @type {PointerMarshaler | null}
             */
            this["PMPtr"] = null;
        }
        if (!("UJM" in $$source)) {
            /**
             * @member
             * @type {UnderlyingJsonMarshaler}
             */
            this["UJM"] = null;
        }
        if (!("UJMPtr" in $$source)) {
            /**
             * UnderlyingJsonMarshaler | null
             * @member
             * @type {UnderlyingJsonMarshaler | null}
             */
            this["UJMPtr"] = null;
        }
        if (!("UTM" in $$source)) {
            /**
             * @member
             * @type {UnderlyingTextMarshaler}
             */
            this["UTM"] = "";
        }
        if (!("UTMPtr" in $$source)) {
            /**
             * UnderlyingTextMarshaler | null
             * @member
             * @type {UnderlyingTextMarshaler | null}
             */
            this["UTMPtr"] = null;
        }
        if (!("UM" in $$source)) {
            /**
             * @member
             * @type {UnderlyingMarshaler}
             */
            this["UM"] = null;
        }
        if (!("UMPtr" in $$source)) {
            /**
             * UnderlyingMarshaler | null
             * @member
             * @type {UnderlyingMarshaler | null}
             */
            this["UMPtr"] = null;
        }
        if (!("JM" in $$source)) {
            /**
             * any
             * @member
             * @type {any}
             */
            this["JM"] = null;
        }
        if (!("JMPtr" in $$source)) {
            /**
             * any | null
             * @member
             * @type {any | null}
             */
            this["JMPtr"] = null;
        }
        if (!("TM" in $$source)) {
            /**
             * string
             * @member
             * @type {string}
             */
            this["TM"] = "";
        }
        if (!("TMPtr" in $$source)) {
            /**
             * string | null
             * @member
             * @type {string | null}
             */
            this["TMPtr"] = null;
        }
        if (!("CJM" in $$source)) {
            /**
             * any
             * @member
             * @type {any}
             */
            this["CJM"] = null;
        }
        if (!("CJMPtr" in $$source)) {
            /**
             * any | null
             * @member
             * @type {any | null}
             */
            this["CJMPtr"] = null;
        }
        if (!("CTM" in $$source)) {
            /**
             * string
             * @member
             * @type {string}
             */
            this["CTM"] = "";
        }
        if (!("CTMPtr" in $$source)) {
            /**
             * string | null
             * @member
             * @type {string | null}
             */
            this["CTMPtr"] = null;
        }
        if (!("CM" in $$source)) {
            /**
             * any
             * @member
             * @type {any}
             */
            this["CM"] = null;
        }
        if (!("CMPtr" in $$source)) {
            /**
             * any | null
             * @member
             * @type {any | null}
             */
            this["CMPtr"] = null;
        }
        if (!("ANM" in $$source)) {
            /**
             * @member
             * @type {AliasNonMarshaler}
             */
            this["ANM"] = {};
        }
        if (!("ANMPtr" in $$source)) {
            /**
             * AliasNonMarshaler | null
             * @member
             * @type {AliasNonMarshaler | null}
             */
            this["ANMPtr"] = null;
        }
        if (!("AJM" in $$source)) {
            /**
             * @member
             * @type {AliasJsonMarshaler}
             */
            this["AJM"] = null;
        }
        if (!("AJMPtr" in $$source)) {
            /**
             * AliasJsonMarshaler | null
             * @member
             * @type {AliasJsonMarshaler | null}
             */
            this["AJMPtr"] = null;
        }
        if (!("ATM" in $$source)) {
            /**
             * @member
             * @type {AliasTextMarshaler}
             */
            this["ATM"] = "";
        }
        if (!("ATMPtr" in $$source)) {
            /**
             * AliasTextMarshaler | null
             * @member
             * @type {AliasTextMarshaler | null}
             */
            this["ATMPtr"] = null;
        }
        if (!("AM" in $$source)) {
            /**
             * @member
             * @type {AliasMarshaler}
             */
            this["AM"] = null;
        }
        if (!("AMPtr" in $$source)) {
            /**
             * AliasMarshaler | null
             * @member
             * @type {AliasMarshaler | null}
             */
            this["AMPtr"] = null;
        }
        if (!("ImJM" in $$source)) {
            /**
             * @member
             * @type {ImplicitJsonMarshaler}
             */
            this["ImJM"] = null;
        }
        if (!("ImJMPtr" in $$source)) {
            /**
             * ImplicitJsonMarshaler | null
             * @member
             * @type {ImplicitJsonMarshaler | null}
             */
            this["ImJMPtr"] = null;
        }
        if (!("ImTM" in $$source)) {
            /**
             * @member
             * @type {ImplicitTextMarshaler}
             */
            this["ImTM"] = "";
        }
        if (!("ImTMPtr" in $$source)) {
            /**
             * ImplicitTextMarshaler | null
             * @member
             * @type {ImplicitTextMarshaler | null}
             */
            this["ImTMPtr"] = null;
        }
        if (!("ImM" in $$source)) {
            /**
             * @member
             * @type {ImplicitMarshaler}
             */
            this["ImM"] = null;
        }
        if (!("ImMPtr" in $$source)) {
            /**
             * ImplicitMarshaler | null
             * @member
             * @type {ImplicitMarshaler | null}
             */
            this["ImMPtr"] = null;
        }
        if (!("ImNJ" in $$source)) {
            /**
             * @member
             * @type {ImplicitNonJson}
             */
            this["ImNJ"] = "";
        }
        if (!("ImNJPtr" in $$source)) {
            /**
             * ImplicitNonJson | null
             * @member
             * @type {ImplicitNonJson | null}
             */
            this["ImNJPtr"] = null;
        }
        if (!("ImNT" in $$source)) {
            /**
             * @member
             * @type {ImplicitNonText}
             */
            this["ImNT"] = null;
        }
        if (!("ImNTPtr" in $$source)) {
            /**
             * ImplicitNonText | null
             * @member
             * @type {ImplicitNonText | null}
             */
            this["ImNTPtr"] = null;
        }
        if (!("ImNM" in $$source)) {
            /**
             * @member
             * @type {ImplicitNonMarshaler}
             */
            this["ImNM"] = (new ImplicitNonMarshaler());
        }
        if (!("ImNMPtr" in $$source)) {
            /**
             * ImplicitNonMarshaler | null
             * @member
             * @type {ImplicitNonMarshaler | null}
             */
            this["ImNMPtr"] = null;
        }
        if (!("ImJbT" in $$source)) {
            /**
             * @member
             * @type {ImplicitJsonButText}
             */
            this["ImJbT"] = null;
        }
        if (!("ImJbTPtr" in $$source)) {
            /**
             * ImplicitJsonButText | null
             * @member
             * @type {ImplicitJsonButText | null}
             */
            this["ImJbTPtr"] = null;
        }
        if (!("ImTbJ" in $$source)) {
            /**
             * @member
             * @type {ImplicitTextButJson}
             */
            this["ImTbJ"] = null;
        }
        if (!("ImTbJPtr" in $$source)) {
            /**
             * ImplicitTextButJson | null
             * @member
             * @type {ImplicitTextButJson | null}
             */
            this["ImTbJPtr"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Data instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Data}
     */
    static createFrom($$source = {}) {
        const $$createField0_0 = $$createType0;
        const $$createField1_0 = $$createType1;
        const $$createField48_0 = $$createType2;
        const $$createField49_0 = $$createType3;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("NM" in $$parsedSource) {
            $$parsedSource["NM"] = $$createField0_0($$parsedSource["NM"]);
        }
        if ("NMPtr" in $$parsedSource) {
            $$parsedSource["NMPtr"] = $$createField1_0($$parsedSource["NMPtr"]);
        }
        if ("ImNM" in $$parsedSource) {
            $$parsedSource["ImNM"] = $$createField48_0($$parsedSource["ImNM"]);
        }
        if ("ImNMPtr" in $$parsedSource) {
            $$parsedSource["ImNMPtr"] = $$createField49_0($$parsedSource["ImNMPtr"]);
        }
        return new Data(/** @type {Partial<Data>} */($$parsedSource));
    }
}

/**
 * any
 * @typedef {any} ImplicitJsonButText
 */

/**
 * any
 * @typedef {any} ImplicitJsonMarshaler
 */

/**
 * any
 * @typedef {any} ImplicitMarshaler
 */

/**
 * string
 * @typedef {string} ImplicitNonJson
 */

/**
 * class{ Marshaler, TextMarshaler }
 */
export class ImplicitNonMarshaler {
    /**
     * Creates a new ImplicitNonMarshaler instance.
     * @param {Partial<ImplicitNonMarshaler>} [$$source = {}] - The source object to create the ImplicitNonMarshaler.
     */
    constructor($$source = {}) {
        if (!("Marshaler" in $$source)) {
            /**
             * @member
             * @type {json$0.Marshaler}
             */
            this["Marshaler"] = null;
        }
        if (!("TextMarshaler" in $$source)) {
            /**
             * @member
             * @type {encoding$0.TextMarshaler}
             */
            this["TextMarshaler"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ImplicitNonMarshaler instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {ImplicitNonMarshaler}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new ImplicitNonMarshaler(/** @type {Partial<ImplicitNonMarshaler>} */($$parsedSource));
    }
}

/**
 * any
 * @typedef {any} ImplicitNonText
 */

/**
 * any
 * @typedef {any} ImplicitTextButJson
 */

/**
 * string
 * @typedef {string} ImplicitTextMarshaler
 */

/**
 * class {}
 */
export class NonMarshaler {
    /**
     * Creates a new NonMarshaler instance.
     * @param {Partial<NonMarshaler>} [$$source = {}] - The source object to create the NonMarshaler.
     */
    constructor($$source = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new NonMarshaler instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {NonMarshaler}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new NonMarshaler(/** @type {Partial<NonMarshaler>} */($$parsedSource));
    }
}

/**
 * any
 * @typedef {any} PointerJsonMarshaler
 */

/**
 * any
 * @typedef {any} PointerMarshaler
 */

/**
 * string
 * @typedef {string} PointerTextMarshaler
 */

/**
 * any
 * @typedef {any} UnderlyingJsonMarshaler
 */

/**
 * any
 * @typedef {any} UnderlyingMarshaler
 */

/**
 * string
 * @typedef {string} UnderlyingTextMarshaler
 */

/**
 * any
 * @typedef {any} ValueJsonMarshaler
 */

/**
 * any
 * @typedef {any} ValueMarshaler
 */

/**
 * string
 * @typedef {string} ValueTextMarshaler
 */

// Private type creation functions
const $$createType0 = NonMarshaler.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = ImplicitNonMarshaler.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
