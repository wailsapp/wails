// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "/wails/runtime.js";

export type BasicCstrAlias<S> = S;

export type ComparableCstrAlias<R> = R;

export type EmbeddedCustomInterface = string;

export type EmbeddedOriginalInterface = string;

export type EmbeddedPointer = string;

export type EmbeddedPointerPtr = string;

export type EmbeddedValue = string;

export type EmbeddedValuePtr = string;

export type GoodTildeCstrAlias<U> = U;

export type InterfaceCstrAlias<Y> = Y;

export class Maps<R, S, T, U, V, W, X, Y, Z> {
    /**
     * Reject
     */
    "Bool": { [_: string]: number };

    /**
     * Accept
     */
    "Int": { [_: `${number}`]: number };

    /**
     * Accept
     */
    "Uint": { [_: `${number}`]: number };

    /**
     * Reject
     */
    "Float": { [_: string]: number };

    /**
     * Reject
     */
    "Complex": { [_: string]: number };

    /**
     * Accept
     */
    "Byte": { [_: `${number}`]: number };

    /**
     * Accept
     */
    "Rune": { [_: `${number}`]: number };

    /**
     * Accept
     */
    "String": { [_: string]: number };

    /**
     * Reject
     */
    "IntPtr": { [_: string]: number };

    /**
     * Reject
     */
    "UintPtr": { [_: string]: number };

    /**
     * Reject
     */
    "FloatPtr": { [_: string]: number };

    /**
     * Reject
     */
    "ComplexPtr": { [_: string]: number };

    /**
     * Reject
     */
    "StringPtr": { [_: string]: number };

    /**
     * Reject
     */
    "NTM": { [_: string]: number };

    /**
     * Reject
     */
    "NTMPtr": { [_: string]: number };

    /**
     * Accept
     */
    "VTM": { [_: ValueTextMarshaler]: number };

    /**
     * Accept
     */
    "VTMPtr": { [_: ValueTextMarshaler]: number };

    /**
     * Reject
     */
    "PTM": { [_: string]: number };

    /**
     * Accept
     */
    "PTMPtr": { [_: PointerTextMarshaler]: number };

    /**
     * Accept, hide
     */
    "JTM": { [_: string]: number };

    /**
     * Accept, hide
     */
    "JTMPtr": { [_: string]: number };

    /**
     * Reject
     */
    "A": { [_: string]: number };

    /**
     * Reject
     */
    "APtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "TM": { [_: string]: number };

    /**
     * Reject
     */
    "TMPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "CI": { [_: string]: number };

    /**
     * Reject
     */
    "CIPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "EI": { [_: string]: number };

    /**
     * Reject
     */
    "EIPtr": { [_: string]: number };

    /**
     * Accept
     */
    "EV": { [_: EmbeddedValue]: number };

    /**
     * Accept
     */
    "EVPtr": { [_: EmbeddedValue]: number };

    /**
     * Accept
     */
    "EVP": { [_: EmbeddedValuePtr]: number };

    /**
     * Accept
     */
    "EVPPtr": { [_: EmbeddedValuePtr]: number };

    /**
     * Reject
     */
    "EP": { [_: string]: number };

    /**
     * Accept
     */
    "EPPtr": { [_: EmbeddedPointer]: number };

    /**
     * Accept
     */
    "EPP": { [_: EmbeddedPointerPtr]: number };

    /**
     * Accept
     */
    "EPPPtr": { [_: EmbeddedPointerPtr]: number };

    /**
     * Accept
     */
    "ECI": { [_: EmbeddedCustomInterface]: number };

    /**
     * Accept
     */
    "ECIPtr": { [_: EmbeddedCustomInterface]: number };

    /**
     * Accept
     */
    "EOI": { [_: EmbeddedOriginalInterface]: number };

    /**
     * Accept
     */
    "EOIPtr": { [_: EmbeddedOriginalInterface]: number };

    /**
     * Reject
     */
    "WT": { [_: string]: number };

    /**
     * Reject
     */
    "WA": { [_: string]: number };

    /**
     * Accept
     */
    "ST": { [_: StringType]: number };

    /**
     * Accept
     */
    "SA": { [_: StringAlias]: number };

    /**
     * Accept
     */
    "IntT": { [_: `${number}`]: number };

    /**
     * Accept
     */
    "IntA": { [_: `${number}`]: number };

    /**
     * Reject
     */
    "VT": { [_: string]: number };

    /**
     * Reject
     */
    "VTPtr": { [_: string]: number };

    /**
     * Reject
     */
    "VPT": { [_: string]: number };

    /**
     * Reject
     */
    "VPTPtr": { [_: string]: number };

    /**
     * Accept
     */
    "VA": { [_: ValueAlias]: number };

    /**
     * Accept
     */
    "VAPtr": { [_: ValueAlias]: number };

    /**
     * Accept, hide
     */
    "VPA": { [_: string]: number };

    /**
     * Reject
     */
    "VPAPtr": { [_: string]: number };

    /**
     * Reject
     */
    "PT": { [_: string]: number };

    /**
     * Reject
     */
    "PTPtr": { [_: string]: number };

    /**
     * Reject
     */
    "PPT": { [_: string]: number };

    /**
     * Reject
     */
    "PPTPtr": { [_: string]: number };

    /**
     * Reject
     */
    "PA": { [_: string]: number };

    /**
     * Accept
     */
    "PAPtr": { [_: PointerAlias]: number };

    /**
     * Accept, hide
     */
    "PPA": { [_: string]: number };

    /**
     * Reject
     */
    "PPAPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "IT": { [_: string]: number };

    /**
     * Reject
     */
    "ITPtr": { [_: string]: number };

    /**
     * Reject
     */
    "IPT": { [_: string]: number };

    /**
     * Reject
     */
    "IPTPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "IA": { [_: string]: number };

    /**
     * Reject
     */
    "IAPtr": { [_: string]: number };

    /**
     * Reject
     */
    "IPA": { [_: string]: number };

    /**
     * Reject
     */
    "IPAPtr": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPR": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPRPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "TPS": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPSPtr": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPT": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPTPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "TPU": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPUPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "TPV": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPVPtr": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPW": { [_: string]: number };

    /**
     * Accept, hide
     */
    "TPWPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "TPX": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPXPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "TPY": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPYPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "TPZ": { [_: string]: number };

    /**
     * Soft reject
     */
    "TPZPtr": { [_: string]: number };

    /**
     * Soft reject
     */
    "GAR": { [_: string]: number };

    /**
     * Soft reject
     */
    "GARPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAS": { [_: string]: number };

    /**
     * Soft reject
     */
    "GASPtr": { [_: string]: number };

    /**
     * Soft reject
     */
    "GAT": { [_: string]: number };

    /**
     * Soft reject
     */
    "GATPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAU": { [_: string]: number };

    /**
     * Soft reject
     */
    "GAUPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAV": { [_: string]: number };

    /**
     * Soft reject
     */
    "GAVPtr": { [_: string]: number };

    /**
     * Soft reject
     */
    "GAW": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAWPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAX": { [_: string]: number };

    /**
     * Soft reject
     */
    "GAXPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAY": { [_: string]: number };

    /**
     * Soft reject
     */
    "GAYPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAZ": { [_: string]: number };

    /**
     * Soft reject
     */
    "GAZPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GACi": { [_: `${number}`]: number };

    /**
     * Accept
     */
    "GACV": { [_: ComparableCstrAlias<ValueTextMarshaler>]: number };

    /**
     * Reject
     */
    "GACP": { [_: string]: number };

    /**
     * Reject
     */
    "GACiPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GACVPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GACPPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GABi": { [_: `${number}`]: number };

    /**
     * Accept
     */
    "GABs": { [_: BasicCstrAlias<string>]: number };

    /**
     * Reject
     */
    "GABiPtr": { [_: string]: number };

    /**
     * Reject
     */
    "GABT": { [_: string]: number };

    /**
     * Reject
     */
    "GABTPtr": { [_: string]: number };

    /**
     * Accept
     */
    "GAGT": { [_: GoodTildeCstrAlias<ValueTextMarshaler>]: number };

    /**
     * Accept, hide
     */
    "GAGTPtr": { [_: string]: number };

    /**
     * Accept
     */
    "GANBV": { [_: NonBasicCstrAlias<ValueTextMarshaler>]: number };

    /**
     * Accept, hide
     */
    "GANBP": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GANBVPtr": { [_: string]: number };

    /**
     * Reject
     */
    "GANBPPtr": { [_: string]: number };

    /**
     * Accept
     */
    "GAPlV1": { [_: PointableCstrAlias<ValueTextMarshaler>]: number };

    /**
     * Accept
     */
    "GAPlV2": { [_: PointableCstrAlias<ValueTextMarshaler>]: number };

    /**
     * Reject
     */
    "GAPlP1": { [_: string]: number };

    /**
     * Accept
     */
    "GAPlP2": { [_: PointableCstrAlias<PointerTextMarshaler>]: number };

    /**
     * Accept, hide
     */
    "GAPlVPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAPlPPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAMi": { [_: `${number}`]: number };

    /**
     * Accept
     */
    "GAMS": { [_: MixedCstrAlias<StringType>]: number };

    /**
     * Accept
     */
    "GAMV": { [_: MixedCstrAlias<ValueTextMarshaler>]: number };

    /**
     * Reject
     */
    "GAMSPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAMVPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAII": { [_: string]: number };

    /**
     * Accept
     */
    "GAIV": { [_: InterfaceCstrAlias<ValueTextMarshaler>]: number };

    /**
     * Accept, hide
     */
    "GAIP": { [_: string]: number };

    /**
     * Reject
     */
    "GAIIPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAIVPtr": { [_: string]: number };

    /**
     * Reject
     */
    "GAIPPtr": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAPrV": { [_: string]: number };

    /**
     * Accept, hide
     */
    "GAPrP": { [_: string]: number };

    /**
     * Reject
     */
    "GAPrVPtr": { [_: string]: number };

    /**
     * Reject
     */
    "GAPrPPtr": { [_: string]: number };

    /** Creates a new Maps instance. */
    constructor($$source: Partial<Maps<R, S, T, U, V, W, X, Y, Z>> = {}) {
        if (!("Bool" in $$source)) {
            this["Bool"] = {};
        }
        if (!("Int" in $$source)) {
            this["Int"] = {};
        }
        if (!("Uint" in $$source)) {
            this["Uint"] = {};
        }
        if (!("Float" in $$source)) {
            this["Float"] = {};
        }
        if (!("Complex" in $$source)) {
            this["Complex"] = {};
        }
        if (!("Byte" in $$source)) {
            this["Byte"] = {};
        }
        if (!("Rune" in $$source)) {
            this["Rune"] = {};
        }
        if (!("String" in $$source)) {
            this["String"] = {};
        }
        if (!("IntPtr" in $$source)) {
            this["IntPtr"] = {};
        }
        if (!("UintPtr" in $$source)) {
            this["UintPtr"] = {};
        }
        if (!("FloatPtr" in $$source)) {
            this["FloatPtr"] = {};
        }
        if (!("ComplexPtr" in $$source)) {
            this["ComplexPtr"] = {};
        }
        if (!("StringPtr" in $$source)) {
            this["StringPtr"] = {};
        }
        if (!("NTM" in $$source)) {
            this["NTM"] = {};
        }
        if (!("NTMPtr" in $$source)) {
            this["NTMPtr"] = {};
        }
        if (!("VTM" in $$source)) {
            this["VTM"] = {};
        }
        if (!("VTMPtr" in $$source)) {
            this["VTMPtr"] = {};
        }
        if (!("PTM" in $$source)) {
            this["PTM"] = {};
        }
        if (!("PTMPtr" in $$source)) {
            this["PTMPtr"] = {};
        }
        if (!("JTM" in $$source)) {
            this["JTM"] = {};
        }
        if (!("JTMPtr" in $$source)) {
            this["JTMPtr"] = {};
        }
        if (!("A" in $$source)) {
            this["A"] = {};
        }
        if (!("APtr" in $$source)) {
            this["APtr"] = {};
        }
        if (!("TM" in $$source)) {
            this["TM"] = {};
        }
        if (!("TMPtr" in $$source)) {
            this["TMPtr"] = {};
        }
        if (!("CI" in $$source)) {
            this["CI"] = {};
        }
        if (!("CIPtr" in $$source)) {
            this["CIPtr"] = {};
        }
        if (!("EI" in $$source)) {
            this["EI"] = {};
        }
        if (!("EIPtr" in $$source)) {
            this["EIPtr"] = {};
        }
        if (!("EV" in $$source)) {
            this["EV"] = {};
        }
        if (!("EVPtr" in $$source)) {
            this["EVPtr"] = {};
        }
        if (!("EVP" in $$source)) {
            this["EVP"] = {};
        }
        if (!("EVPPtr" in $$source)) {
            this["EVPPtr"] = {};
        }
        if (!("EP" in $$source)) {
            this["EP"] = {};
        }
        if (!("EPPtr" in $$source)) {
            this["EPPtr"] = {};
        }
        if (!("EPP" in $$source)) {
            this["EPP"] = {};
        }
        if (!("EPPPtr" in $$source)) {
            this["EPPPtr"] = {};
        }
        if (!("ECI" in $$source)) {
            this["ECI"] = {};
        }
        if (!("ECIPtr" in $$source)) {
            this["ECIPtr"] = {};
        }
        if (!("EOI" in $$source)) {
            this["EOI"] = {};
        }
        if (!("EOIPtr" in $$source)) {
            this["EOIPtr"] = {};
        }
        if (!("WT" in $$source)) {
            this["WT"] = {};
        }
        if (!("WA" in $$source)) {
            this["WA"] = {};
        }
        if (!("ST" in $$source)) {
            this["ST"] = {};
        }
        if (!("SA" in $$source)) {
            this["SA"] = {};
        }
        if (!("IntT" in $$source)) {
            this["IntT"] = {};
        }
        if (!("IntA" in $$source)) {
            this["IntA"] = {};
        }
        if (!("VT" in $$source)) {
            this["VT"] = {};
        }
        if (!("VTPtr" in $$source)) {
            this["VTPtr"] = {};
        }
        if (!("VPT" in $$source)) {
            this["VPT"] = {};
        }
        if (!("VPTPtr" in $$source)) {
            this["VPTPtr"] = {};
        }
        if (!("VA" in $$source)) {
            this["VA"] = {};
        }
        if (!("VAPtr" in $$source)) {
            this["VAPtr"] = {};
        }
        if (!("VPA" in $$source)) {
            this["VPA"] = {};
        }
        if (!("VPAPtr" in $$source)) {
            this["VPAPtr"] = {};
        }
        if (!("PT" in $$source)) {
            this["PT"] = {};
        }
        if (!("PTPtr" in $$source)) {
            this["PTPtr"] = {};
        }
        if (!("PPT" in $$source)) {
            this["PPT"] = {};
        }
        if (!("PPTPtr" in $$source)) {
            this["PPTPtr"] = {};
        }
        if (!("PA" in $$source)) {
            this["PA"] = {};
        }
        if (!("PAPtr" in $$source)) {
            this["PAPtr"] = {};
        }
        if (!("PPA" in $$source)) {
            this["PPA"] = {};
        }
        if (!("PPAPtr" in $$source)) {
            this["PPAPtr"] = {};
        }
        if (!("IT" in $$source)) {
            this["IT"] = {};
        }
        if (!("ITPtr" in $$source)) {
            this["ITPtr"] = {};
        }
        if (!("IPT" in $$source)) {
            this["IPT"] = {};
        }
        if (!("IPTPtr" in $$source)) {
            this["IPTPtr"] = {};
        }
        if (!("IA" in $$source)) {
            this["IA"] = {};
        }
        if (!("IAPtr" in $$source)) {
            this["IAPtr"] = {};
        }
        if (!("IPA" in $$source)) {
            this["IPA"] = {};
        }
        if (!("IPAPtr" in $$source)) {
            this["IPAPtr"] = {};
        }
        if (!("TPR" in $$source)) {
            this["TPR"] = {};
        }
        if (!("TPRPtr" in $$source)) {
            this["TPRPtr"] = {};
        }
        if (!("TPS" in $$source)) {
            this["TPS"] = {};
        }
        if (!("TPSPtr" in $$source)) {
            this["TPSPtr"] = {};
        }
        if (!("TPT" in $$source)) {
            this["TPT"] = {};
        }
        if (!("TPTPtr" in $$source)) {
            this["TPTPtr"] = {};
        }
        if (!("TPU" in $$source)) {
            this["TPU"] = {};
        }
        if (!("TPUPtr" in $$source)) {
            this["TPUPtr"] = {};
        }
        if (!("TPV" in $$source)) {
            this["TPV"] = {};
        }
        if (!("TPVPtr" in $$source)) {
            this["TPVPtr"] = {};
        }
        if (!("TPW" in $$source)) {
            this["TPW"] = {};
        }
        if (!("TPWPtr" in $$source)) {
            this["TPWPtr"] = {};
        }
        if (!("TPX" in $$source)) {
            this["TPX"] = {};
        }
        if (!("TPXPtr" in $$source)) {
            this["TPXPtr"] = {};
        }
        if (!("TPY" in $$source)) {
            this["TPY"] = {};
        }
        if (!("TPYPtr" in $$source)) {
            this["TPYPtr"] = {};
        }
        if (!("TPZ" in $$source)) {
            this["TPZ"] = {};
        }
        if (!("TPZPtr" in $$source)) {
            this["TPZPtr"] = {};
        }
        if (!("GAR" in $$source)) {
            this["GAR"] = {};
        }
        if (!("GARPtr" in $$source)) {
            this["GARPtr"] = {};
        }
        if (!("GAS" in $$source)) {
            this["GAS"] = {};
        }
        if (!("GASPtr" in $$source)) {
            this["GASPtr"] = {};
        }
        if (!("GAT" in $$source)) {
            this["GAT"] = {};
        }
        if (!("GATPtr" in $$source)) {
            this["GATPtr"] = {};
        }
        if (!("GAU" in $$source)) {
            this["GAU"] = {};
        }
        if (!("GAUPtr" in $$source)) {
            this["GAUPtr"] = {};
        }
        if (!("GAV" in $$source)) {
            this["GAV"] = {};
        }
        if (!("GAVPtr" in $$source)) {
            this["GAVPtr"] = {};
        }
        if (!("GAW" in $$source)) {
            this["GAW"] = {};
        }
        if (!("GAWPtr" in $$source)) {
            this["GAWPtr"] = {};
        }
        if (!("GAX" in $$source)) {
            this["GAX"] = {};
        }
        if (!("GAXPtr" in $$source)) {
            this["GAXPtr"] = {};
        }
        if (!("GAY" in $$source)) {
            this["GAY"] = {};
        }
        if (!("GAYPtr" in $$source)) {
            this["GAYPtr"] = {};
        }
        if (!("GAZ" in $$source)) {
            this["GAZ"] = {};
        }
        if (!("GAZPtr" in $$source)) {
            this["GAZPtr"] = {};
        }
        if (!("GACi" in $$source)) {
            this["GACi"] = {};
        }
        if (!("GACV" in $$source)) {
            this["GACV"] = {};
        }
        if (!("GACP" in $$source)) {
            this["GACP"] = {};
        }
        if (!("GACiPtr" in $$source)) {
            this["GACiPtr"] = {};
        }
        if (!("GACVPtr" in $$source)) {
            this["GACVPtr"] = {};
        }
        if (!("GACPPtr" in $$source)) {
            this["GACPPtr"] = {};
        }
        if (!("GABi" in $$source)) {
            this["GABi"] = {};
        }
        if (!("GABs" in $$source)) {
            this["GABs"] = {};
        }
        if (!("GABiPtr" in $$source)) {
            this["GABiPtr"] = {};
        }
        if (!("GABT" in $$source)) {
            this["GABT"] = {};
        }
        if (!("GABTPtr" in $$source)) {
            this["GABTPtr"] = {};
        }
        if (!("GAGT" in $$source)) {
            this["GAGT"] = {};
        }
        if (!("GAGTPtr" in $$source)) {
            this["GAGTPtr"] = {};
        }
        if (!("GANBV" in $$source)) {
            this["GANBV"] = {};
        }
        if (!("GANBP" in $$source)) {
            this["GANBP"] = {};
        }
        if (!("GANBVPtr" in $$source)) {
            this["GANBVPtr"] = {};
        }
        if (!("GANBPPtr" in $$source)) {
            this["GANBPPtr"] = {};
        }
        if (!("GAPlV1" in $$source)) {
            this["GAPlV1"] = {};
        }
        if (!("GAPlV2" in $$source)) {
            this["GAPlV2"] = {};
        }
        if (!("GAPlP1" in $$source)) {
            this["GAPlP1"] = {};
        }
        if (!("GAPlP2" in $$source)) {
            this["GAPlP2"] = {};
        }
        if (!("GAPlVPtr" in $$source)) {
            this["GAPlVPtr"] = {};
        }
        if (!("GAPlPPtr" in $$source)) {
            this["GAPlPPtr"] = {};
        }
        if (!("GAMi" in $$source)) {
            this["GAMi"] = {};
        }
        if (!("GAMS" in $$source)) {
            this["GAMS"] = {};
        }
        if (!("GAMV" in $$source)) {
            this["GAMV"] = {};
        }
        if (!("GAMSPtr" in $$source)) {
            this["GAMSPtr"] = {};
        }
        if (!("GAMVPtr" in $$source)) {
            this["GAMVPtr"] = {};
        }
        if (!("GAII" in $$source)) {
            this["GAII"] = {};
        }
        if (!("GAIV" in $$source)) {
            this["GAIV"] = {};
        }
        if (!("GAIP" in $$source)) {
            this["GAIP"] = {};
        }
        if (!("GAIIPtr" in $$source)) {
            this["GAIIPtr"] = {};
        }
        if (!("GAIVPtr" in $$source)) {
            this["GAIVPtr"] = {};
        }
        if (!("GAIPPtr" in $$source)) {
            this["GAIPPtr"] = {};
        }
        if (!("GAPrV" in $$source)) {
            this["GAPrV"] = {};
        }
        if (!("GAPrP" in $$source)) {
            this["GAPrP"] = {};
        }
        if (!("GAPrVPtr" in $$source)) {
            this["GAPrVPtr"] = {};
        }
        if (!("GAPrPPtr" in $$source)) {
            this["GAPrPPtr"] = {};
        }

        Object.assign(this, $$source);
    }

    /**
     * Given creation functions for each type parameter,
     * returns a creation function for a concrete instance
     * of the generic class Maps.
     */
    static createFrom<R = any, S = any, T = any, U = any, V = any, W = any, X = any, Y = any, Z = any>($$createParamR: (source: any) => R, $$createParamS: (source: any) => S, $$createParamT: (source: any) => T, $$createParamU: (source: any) => U, $$createParamV: (source: any) => V, $$createParamW: (source: any) => W, $$createParamX: (source: any) => X, $$createParamY: (source: any) => Y, $$createParamZ: (source: any) => Z): ($$source?: any) => Maps<R, S, T, U, V, W, X, Y, Z> {
        const $$createField0_0 = $$createType0;
        const $$createField1_0 = $$createType1;
        const $$createField2_0 = $$createType2;
        const $$createField3_0 = $$createType3;
        const $$createField4_0 = $$createType4;
        const $$createField5_0 = $$createType5;
        const $$createField6_0 = $$createType6;
        const $$createField7_0 = $$createType7;
        const $$createField8_0 = $$createType8;
        const $$createField9_0 = $$createType9;
        const $$createField10_0 = $$createType10;
        const $$createField11_0 = $$createType11;
        const $$createField12_0 = $$createType12;
        const $$createField13_0 = $$createType13;
        const $$createField14_0 = $$createType14;
        const $$createField15_0 = $$createType15;
        const $$createField16_0 = $$createType16;
        const $$createField17_0 = $$createType17;
        const $$createField18_0 = $$createType18;
        const $$createField19_0 = $$createType19;
        const $$createField20_0 = $$createType20;
        const $$createField21_0 = $$createType21;
        const $$createField22_0 = $$createType22;
        const $$createField23_0 = $$createType23;
        const $$createField24_0 = $$createType24;
        const $$createField25_0 = $$createType25;
        const $$createField26_0 = $$createType26;
        const $$createField27_0 = $$createType27;
        const $$createField28_0 = $$createType28;
        const $$createField29_0 = $$createType29;
        const $$createField30_0 = $$createType30;
        const $$createField31_0 = $$createType31;
        const $$createField32_0 = $$createType32;
        const $$createField33_0 = $$createType33;
        const $$createField34_0 = $$createType34;
        const $$createField35_0 = $$createType35;
        const $$createField36_0 = $$createType36;
        const $$createField37_0 = $$createType37;
        const $$createField38_0 = $$createType38;
        const $$createField39_0 = $$createType39;
        const $$createField40_0 = $$createType40;
        const $$createField41_0 = $$createType41;
        const $$createField42_0 = $$createType0;
        const $$createField43_0 = $$createType42;
        const $$createField44_0 = $$createType7;
        const $$createField45_0 = $$createType43;
        const $$createField46_0 = $$createType1;
        const $$createField47_0 = $$createType44;
        const $$createField48_0 = $$createType45;
        const $$createField49_0 = $$createType46;
        const $$createField50_0 = $$createType47;
        const $$createField51_0 = $$createType15;
        const $$createField52_0 = $$createType16;
        const $$createField53_0 = $$createType16;
        const $$createField54_0 = $$createType48;
        const $$createField55_0 = $$createType49;
        const $$createField56_0 = $$createType50;
        const $$createField57_0 = $$createType51;
        const $$createField58_0 = $$createType52;
        const $$createField59_0 = $$createType17;
        const $$createField60_0 = $$createType18;
        const $$createField61_0 = $$createType18;
        const $$createField62_0 = $$createType53;
        const $$createField63_0 = $$createType54;
        const $$createField64_0 = $$createType55;
        const $$createField65_0 = $$createType56;
        const $$createField66_0 = $$createType57;
        const $$createField67_0 = $$createType23;
        const $$createField68_0 = $$createType24;
        const $$createField69_0 = $$createType24;
        const $$createField70_0 = $$createType58;
        const $$createField71_0 = $$createType59($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField72_0 = $$createType60($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField73_0 = $$createType61($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField74_0 = $$createType62($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField75_0 = $$createType63($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField76_0 = $$createType64($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField77_0 = $$createType65($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField78_0 = $$createType66($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField79_0 = $$createType67($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField80_0 = $$createType68($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField81_0 = $$createType69($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField82_0 = $$createType70($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField83_0 = $$createType71($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField84_0 = $$createType72($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField85_0 = $$createType73($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField86_0 = $$createType74($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField87_0 = $$createType75($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField88_0 = $$createType76($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField89_0 = $$createType59($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField90_0 = $$createType60($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField91_0 = $$createType61($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField92_0 = $$createType62($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField93_0 = $$createType63($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField94_0 = $$createType64($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField95_0 = $$createType65($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField96_0 = $$createType66($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField97_0 = $$createType67($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField98_0 = $$createType68($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField99_0 = $$createType69($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField100_0 = $$createType70($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField101_0 = $$createType71($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField102_0 = $$createType72($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField103_0 = $$createType73($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField104_0 = $$createType74($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField105_0 = $$createType75($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField106_0 = $$createType76($$createParamR, $$createParamS, $$createParamT, $$createParamU, $$createParamV, $$createParamW, $$createParamX, $$createParamY, $$createParamZ);
        const $$createField107_0 = $$createType1;
        const $$createField108_0 = $$createType15;
        const $$createField109_0 = $$createType17;
        const $$createField110_0 = $$createType8;
        const $$createField111_0 = $$createType16;
        const $$createField112_0 = $$createType18;
        const $$createField113_0 = $$createType1;
        const $$createField114_0 = $$createType7;
        const $$createField115_0 = $$createType8;
        const $$createField116_0 = $$createType77;
        const $$createField117_0 = $$createType78;
        const $$createField118_0 = $$createType15;
        const $$createField119_0 = $$createType16;
        const $$createField120_0 = $$createType15;
        const $$createField121_0 = $$createType18;
        const $$createField122_0 = $$createType16;
        const $$createField123_0 = $$createType53;
        const $$createField124_0 = $$createType15;
        const $$createField125_0 = $$createType16;
        const $$createField126_0 = $$createType17;
        const $$createField127_0 = $$createType18;
        const $$createField128_0 = $$createType16;
        const $$createField129_0 = $$createType18;
        const $$createField130_0 = $$createType2;
        const $$createField131_0 = $$createType42;
        const $$createField132_0 = $$createType15;
        const $$createField133_0 = $$createType79;
        const $$createField134_0 = $$createType16;
        const $$createField135_0 = $$createType23;
        const $$createField136_0 = $$createType15;
        const $$createField137_0 = $$createType18;
        const $$createField138_0 = $$createType24;
        const $$createField139_0 = $$createType16;
        const $$createField140_0 = $$createType53;
        const $$createField141_0 = $$createType16;
        const $$createField142_0 = $$createType18;
        const $$createField143_0 = $$createType48;
        const $$createField144_0 = $$createType53;
        return ($$source: any = {}) => {
            let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
            if ("Bool" in $$parsedSource) {
                $$parsedSource["Bool"] = $$createField0_0($$parsedSource["Bool"]);
            }
            if ("Int" in $$parsedSource) {
                $$parsedSource["Int"] = $$createField1_0($$parsedSource["Int"]);
            }
            if ("Uint" in $$parsedSource) {
                $$parsedSource["Uint"] = $$createField2_0($$parsedSource["Uint"]);
            }
            if ("Float" in $$parsedSource) {
                $$parsedSource["Float"] = $$createField3_0($$parsedSource["Float"]);
            }
            if ("Complex" in $$parsedSource) {
                $$parsedSource["Complex"] = $$createField4_0($$parsedSource["Complex"]);
            }
            if ("Byte" in $$parsedSource) {
                $$parsedSource["Byte"] = $$createField5_0($$parsedSource["Byte"]);
            }
            if ("Rune" in $$parsedSource) {
                $$parsedSource["Rune"] = $$createField6_0($$parsedSource["Rune"]);
            }
            if ("String" in $$parsedSource) {
                $$parsedSource["String"] = $$createField7_0($$parsedSource["String"]);
            }
            if ("IntPtr" in $$parsedSource) {
                $$parsedSource["IntPtr"] = $$createField8_0($$parsedSource["IntPtr"]);
            }
            if ("UintPtr" in $$parsedSource) {
                $$parsedSource["UintPtr"] = $$createField9_0($$parsedSource["UintPtr"]);
            }
            if ("FloatPtr" in $$parsedSource) {
                $$parsedSource["FloatPtr"] = $$createField10_0($$parsedSource["FloatPtr"]);
            }
            if ("ComplexPtr" in $$parsedSource) {
                $$parsedSource["ComplexPtr"] = $$createField11_0($$parsedSource["ComplexPtr"]);
            }
            if ("StringPtr" in $$parsedSource) {
                $$parsedSource["StringPtr"] = $$createField12_0($$parsedSource["StringPtr"]);
            }
            if ("NTM" in $$parsedSource) {
                $$parsedSource["NTM"] = $$createField13_0($$parsedSource["NTM"]);
            }
            if ("NTMPtr" in $$parsedSource) {
                $$parsedSource["NTMPtr"] = $$createField14_0($$parsedSource["NTMPtr"]);
            }
            if ("VTM" in $$parsedSource) {
                $$parsedSource["VTM"] = $$createField15_0($$parsedSource["VTM"]);
            }
            if ("VTMPtr" in $$parsedSource) {
                $$parsedSource["VTMPtr"] = $$createField16_0($$parsedSource["VTMPtr"]);
            }
            if ("PTM" in $$parsedSource) {
                $$parsedSource["PTM"] = $$createField17_0($$parsedSource["PTM"]);
            }
            if ("PTMPtr" in $$parsedSource) {
                $$parsedSource["PTMPtr"] = $$createField18_0($$parsedSource["PTMPtr"]);
            }
            if ("JTM" in $$parsedSource) {
                $$parsedSource["JTM"] = $$createField19_0($$parsedSource["JTM"]);
            }
            if ("JTMPtr" in $$parsedSource) {
                $$parsedSource["JTMPtr"] = $$createField20_0($$parsedSource["JTMPtr"]);
            }
            if ("A" in $$parsedSource) {
                $$parsedSource["A"] = $$createField21_0($$parsedSource["A"]);
            }
            if ("APtr" in $$parsedSource) {
                $$parsedSource["APtr"] = $$createField22_0($$parsedSource["APtr"]);
            }
            if ("TM" in $$parsedSource) {
                $$parsedSource["TM"] = $$createField23_0($$parsedSource["TM"]);
            }
            if ("TMPtr" in $$parsedSource) {
                $$parsedSource["TMPtr"] = $$createField24_0($$parsedSource["TMPtr"]);
            }
            if ("CI" in $$parsedSource) {
                $$parsedSource["CI"] = $$createField25_0($$parsedSource["CI"]);
            }
            if ("CIPtr" in $$parsedSource) {
                $$parsedSource["CIPtr"] = $$createField26_0($$parsedSource["CIPtr"]);
            }
            if ("EI" in $$parsedSource) {
                $$parsedSource["EI"] = $$createField27_0($$parsedSource["EI"]);
            }
            if ("EIPtr" in $$parsedSource) {
                $$parsedSource["EIPtr"] = $$createField28_0($$parsedSource["EIPtr"]);
            }
            if ("EV" in $$parsedSource) {
                $$parsedSource["EV"] = $$createField29_0($$parsedSource["EV"]);
            }
            if ("EVPtr" in $$parsedSource) {
                $$parsedSource["EVPtr"] = $$createField30_0($$parsedSource["EVPtr"]);
            }
            if ("EVP" in $$parsedSource) {
                $$parsedSource["EVP"] = $$createField31_0($$parsedSource["EVP"]);
            }
            if ("EVPPtr" in $$parsedSource) {
                $$parsedSource["EVPPtr"] = $$createField32_0($$parsedSource["EVPPtr"]);
            }
            if ("EP" in $$parsedSource) {
                $$parsedSource["EP"] = $$createField33_0($$parsedSource["EP"]);
            }
            if ("EPPtr" in $$parsedSource) {
                $$parsedSource["EPPtr"] = $$createField34_0($$parsedSource["EPPtr"]);
            }
            if ("EPP" in $$parsedSource) {
                $$parsedSource["EPP"] = $$createField35_0($$parsedSource["EPP"]);
            }
            if ("EPPPtr" in $$parsedSource) {
                $$parsedSource["EPPPtr"] = $$createField36_0($$parsedSource["EPPPtr"]);
            }
            if ("ECI" in $$parsedSource) {
                $$parsedSource["ECI"] = $$createField37_0($$parsedSource["ECI"]);
            }
            if ("ECIPtr" in $$parsedSource) {
                $$parsedSource["ECIPtr"] = $$createField38_0($$parsedSource["ECIPtr"]);
            }
            if ("EOI" in $$parsedSource) {
                $$parsedSource["EOI"] = $$createField39_0($$parsedSource["EOI"]);
            }
            if ("EOIPtr" in $$parsedSource) {
                $$parsedSource["EOIPtr"] = $$createField40_0($$parsedSource["EOIPtr"]);
            }
            if ("WT" in $$parsedSource) {
                $$parsedSource["WT"] = $$createField41_0($$parsedSource["WT"]);
            }
            if ("WA" in $$parsedSource) {
                $$parsedSource["WA"] = $$createField42_0($$parsedSource["WA"]);
            }
            if ("ST" in $$parsedSource) {
                $$parsedSource["ST"] = $$createField43_0($$parsedSource["ST"]);
            }
            if ("SA" in $$parsedSource) {
                $$parsedSource["SA"] = $$createField44_0($$parsedSource["SA"]);
            }
            if ("IntT" in $$parsedSource) {
                $$parsedSource["IntT"] = $$createField45_0($$parsedSource["IntT"]);
            }
            if ("IntA" in $$parsedSource) {
                $$parsedSource["IntA"] = $$createField46_0($$parsedSource["IntA"]);
            }
            if ("VT" in $$parsedSource) {
                $$parsedSource["VT"] = $$createField47_0($$parsedSource["VT"]);
            }
            if ("VTPtr" in $$parsedSource) {
                $$parsedSource["VTPtr"] = $$createField48_0($$parsedSource["VTPtr"]);
            }
            if ("VPT" in $$parsedSource) {
                $$parsedSource["VPT"] = $$createField49_0($$parsedSource["VPT"]);
            }
            if ("VPTPtr" in $$parsedSource) {
                $$parsedSource["VPTPtr"] = $$createField50_0($$parsedSource["VPTPtr"]);
            }
            if ("VA" in $$parsedSource) {
                $$parsedSource["VA"] = $$createField51_0($$parsedSource["VA"]);
            }
            if ("VAPtr" in $$parsedSource) {
                $$parsedSource["VAPtr"] = $$createField52_0($$parsedSource["VAPtr"]);
            }
            if ("VPA" in $$parsedSource) {
                $$parsedSource["VPA"] = $$createField53_0($$parsedSource["VPA"]);
            }
            if ("VPAPtr" in $$parsedSource) {
                $$parsedSource["VPAPtr"] = $$createField54_0($$parsedSource["VPAPtr"]);
            }
            if ("PT" in $$parsedSource) {
                $$parsedSource["PT"] = $$createField55_0($$parsedSource["PT"]);
            }
            if ("PTPtr" in $$parsedSource) {
                $$parsedSource["PTPtr"] = $$createField56_0($$parsedSource["PTPtr"]);
            }
            if ("PPT" in $$parsedSource) {
                $$parsedSource["PPT"] = $$createField57_0($$parsedSource["PPT"]);
            }
            if ("PPTPtr" in $$parsedSource) {
                $$parsedSource["PPTPtr"] = $$createField58_0($$parsedSource["PPTPtr"]);
            }
            if ("PA" in $$parsedSource) {
                $$parsedSource["PA"] = $$createField59_0($$parsedSource["PA"]);
            }
            if ("PAPtr" in $$parsedSource) {
                $$parsedSource["PAPtr"] = $$createField60_0($$parsedSource["PAPtr"]);
            }
            if ("PPA" in $$parsedSource) {
                $$parsedSource["PPA"] = $$createField61_0($$parsedSource["PPA"]);
            }
            if ("PPAPtr" in $$parsedSource) {
                $$parsedSource["PPAPtr"] = $$createField62_0($$parsedSource["PPAPtr"]);
            }
            if ("IT" in $$parsedSource) {
                $$parsedSource["IT"] = $$createField63_0($$parsedSource["IT"]);
            }
            if ("ITPtr" in $$parsedSource) {
                $$parsedSource["ITPtr"] = $$createField64_0($$parsedSource["ITPtr"]);
            }
            if ("IPT" in $$parsedSource) {
                $$parsedSource["IPT"] = $$createField65_0($$parsedSource["IPT"]);
            }
            if ("IPTPtr" in $$parsedSource) {
                $$parsedSource["IPTPtr"] = $$createField66_0($$parsedSource["IPTPtr"]);
            }
            if ("IA" in $$parsedSource) {
                $$parsedSource["IA"] = $$createField67_0($$parsedSource["IA"]);
            }
            if ("IAPtr" in $$parsedSource) {
                $$parsedSource["IAPtr"] = $$createField68_0($$parsedSource["IAPtr"]);
            }
            if ("IPA" in $$parsedSource) {
                $$parsedSource["IPA"] = $$createField69_0($$parsedSource["IPA"]);
            }
            if ("IPAPtr" in $$parsedSource) {
                $$parsedSource["IPAPtr"] = $$createField70_0($$parsedSource["IPAPtr"]);
            }
            if ("TPR" in $$parsedSource) {
                $$parsedSource["TPR"] = $$createField71_0($$parsedSource["TPR"]);
            }
            if ("TPRPtr" in $$parsedSource) {
                $$parsedSource["TPRPtr"] = $$createField72_0($$parsedSource["TPRPtr"]);
            }
            if ("TPS" in $$parsedSource) {
                $$parsedSource["TPS"] = $$createField73_0($$parsedSource["TPS"]);
            }
            if ("TPSPtr" in $$parsedSource) {
                $$parsedSource["TPSPtr"] = $$createField74_0($$parsedSource["TPSPtr"]);
            }
            if ("TPT" in $$parsedSource) {
                $$parsedSource["TPT"] = $$createField75_0($$parsedSource["TPT"]);
            }
            if ("TPTPtr" in $$parsedSource) {
                $$parsedSource["TPTPtr"] = $$createField76_0($$parsedSource["TPTPtr"]);
            }
            if ("TPU" in $$parsedSource) {
                $$parsedSource["TPU"] = $$createField77_0($$parsedSource["TPU"]);
            }
            if ("TPUPtr" in $$parsedSource) {
                $$parsedSource["TPUPtr"] = $$createField78_0($$parsedSource["TPUPtr"]);
            }
            if ("TPV" in $$parsedSource) {
                $$parsedSource["TPV"] = $$createField79_0($$parsedSource["TPV"]);
            }
            if ("TPVPtr" in $$parsedSource) {
                $$parsedSource["TPVPtr"] = $$createField80_0($$parsedSource["TPVPtr"]);
            }
            if ("TPW" in $$parsedSource) {
                $$parsedSource["TPW"] = $$createField81_0($$parsedSource["TPW"]);
            }
            if ("TPWPtr" in $$parsedSource) {
                $$parsedSource["TPWPtr"] = $$createField82_0($$parsedSource["TPWPtr"]);
            }
            if ("TPX" in $$parsedSource) {
                $$parsedSource["TPX"] = $$createField83_0($$parsedSource["TPX"]);
            }
            if ("TPXPtr" in $$parsedSource) {
                $$parsedSource["TPXPtr"] = $$createField84_0($$parsedSource["TPXPtr"]);
            }
            if ("TPY" in $$parsedSource) {
                $$parsedSource["TPY"] = $$createField85_0($$parsedSource["TPY"]);
            }
            if ("TPYPtr" in $$parsedSource) {
                $$parsedSource["TPYPtr"] = $$createField86_0($$parsedSource["TPYPtr"]);
            }
            if ("TPZ" in $$parsedSource) {
                $$parsedSource["TPZ"] = $$createField87_0($$parsedSource["TPZ"]);
            }
            if ("TPZPtr" in $$parsedSource) {
                $$parsedSource["TPZPtr"] = $$createField88_0($$parsedSource["TPZPtr"]);
            }
            if ("GAR" in $$parsedSource) {
                $$parsedSource["GAR"] = $$createField89_0($$parsedSource["GAR"]);
            }
            if ("GARPtr" in $$parsedSource) {
                $$parsedSource["GARPtr"] = $$createField90_0($$parsedSource["GARPtr"]);
            }
            if ("GAS" in $$parsedSource) {
                $$parsedSource["GAS"] = $$createField91_0($$parsedSource["GAS"]);
            }
            if ("GASPtr" in $$parsedSource) {
                $$parsedSource["GASPtr"] = $$createField92_0($$parsedSource["GASPtr"]);
            }
            if ("GAT" in $$parsedSource) {
                $$parsedSource["GAT"] = $$createField93_0($$parsedSource["GAT"]);
            }
            if ("GATPtr" in $$parsedSource) {
                $$parsedSource["GATPtr"] = $$createField94_0($$parsedSource["GATPtr"]);
            }
            if ("GAU" in $$parsedSource) {
                $$parsedSource["GAU"] = $$createField95_0($$parsedSource["GAU"]);
            }
            if ("GAUPtr" in $$parsedSource) {
                $$parsedSource["GAUPtr"] = $$createField96_0($$parsedSource["GAUPtr"]);
            }
            if ("GAV" in $$parsedSource) {
                $$parsedSource["GAV"] = $$createField97_0($$parsedSource["GAV"]);
            }
            if ("GAVPtr" in $$parsedSource) {
                $$parsedSource["GAVPtr"] = $$createField98_0($$parsedSource["GAVPtr"]);
            }
            if ("GAW" in $$parsedSource) {
                $$parsedSource["GAW"] = $$createField99_0($$parsedSource["GAW"]);
            }
            if ("GAWPtr" in $$parsedSource) {
                $$parsedSource["GAWPtr"] = $$createField100_0($$parsedSource["GAWPtr"]);
            }
            if ("GAX" in $$parsedSource) {
                $$parsedSource["GAX"] = $$createField101_0($$parsedSource["GAX"]);
            }
            if ("GAXPtr" in $$parsedSource) {
                $$parsedSource["GAXPtr"] = $$createField102_0($$parsedSource["GAXPtr"]);
            }
            if ("GAY" in $$parsedSource) {
                $$parsedSource["GAY"] = $$createField103_0($$parsedSource["GAY"]);
            }
            if ("GAYPtr" in $$parsedSource) {
                $$parsedSource["GAYPtr"] = $$createField104_0($$parsedSource["GAYPtr"]);
            }
            if ("GAZ" in $$parsedSource) {
                $$parsedSource["GAZ"] = $$createField105_0($$parsedSource["GAZ"]);
            }
            if ("GAZPtr" in $$parsedSource) {
                $$parsedSource["GAZPtr"] = $$createField106_0($$parsedSource["GAZPtr"]);
            }
            if ("GACi" in $$parsedSource) {
                $$parsedSource["GACi"] = $$createField107_0($$parsedSource["GACi"]);
            }
            if ("GACV" in $$parsedSource) {
                $$parsedSource["GACV"] = $$createField108_0($$parsedSource["GACV"]);
            }
            if ("GACP" in $$parsedSource) {
                $$parsedSource["GACP"] = $$createField109_0($$parsedSource["GACP"]);
            }
            if ("GACiPtr" in $$parsedSource) {
                $$parsedSource["GACiPtr"] = $$createField110_0($$parsedSource["GACiPtr"]);
            }
            if ("GACVPtr" in $$parsedSource) {
                $$parsedSource["GACVPtr"] = $$createField111_0($$parsedSource["GACVPtr"]);
            }
            if ("GACPPtr" in $$parsedSource) {
                $$parsedSource["GACPPtr"] = $$createField112_0($$parsedSource["GACPPtr"]);
            }
            if ("GABi" in $$parsedSource) {
                $$parsedSource["GABi"] = $$createField113_0($$parsedSource["GABi"]);
            }
            if ("GABs" in $$parsedSource) {
                $$parsedSource["GABs"] = $$createField114_0($$parsedSource["GABs"]);
            }
            if ("GABiPtr" in $$parsedSource) {
                $$parsedSource["GABiPtr"] = $$createField115_0($$parsedSource["GABiPtr"]);
            }
            if ("GABT" in $$parsedSource) {
                $$parsedSource["GABT"] = $$createField116_0($$parsedSource["GABT"]);
            }
            if ("GABTPtr" in $$parsedSource) {
                $$parsedSource["GABTPtr"] = $$createField117_0($$parsedSource["GABTPtr"]);
            }
            if ("GAGT" in $$parsedSource) {
                $$parsedSource["GAGT"] = $$createField118_0($$parsedSource["GAGT"]);
            }
            if ("GAGTPtr" in $$parsedSource) {
                $$parsedSource["GAGTPtr"] = $$createField119_0($$parsedSource["GAGTPtr"]);
            }
            if ("GANBV" in $$parsedSource) {
                $$parsedSource["GANBV"] = $$createField120_0($$parsedSource["GANBV"]);
            }
            if ("GANBP" in $$parsedSource) {
                $$parsedSource["GANBP"] = $$createField121_0($$parsedSource["GANBP"]);
            }
            if ("GANBVPtr" in $$parsedSource) {
                $$parsedSource["GANBVPtr"] = $$createField122_0($$parsedSource["GANBVPtr"]);
            }
            if ("GANBPPtr" in $$parsedSource) {
                $$parsedSource["GANBPPtr"] = $$createField123_0($$parsedSource["GANBPPtr"]);
            }
            if ("GAPlV1" in $$parsedSource) {
                $$parsedSource["GAPlV1"] = $$createField124_0($$parsedSource["GAPlV1"]);
            }
            if ("GAPlV2" in $$parsedSource) {
                $$parsedSource["GAPlV2"] = $$createField125_0($$parsedSource["GAPlV2"]);
            }
            if ("GAPlP1" in $$parsedSource) {
                $$parsedSource["GAPlP1"] = $$createField126_0($$parsedSource["GAPlP1"]);
            }
            if ("GAPlP2" in $$parsedSource) {
                $$parsedSource["GAPlP2"] = $$createField127_0($$parsedSource["GAPlP2"]);
            }
            if ("GAPlVPtr" in $$parsedSource) {
                $$parsedSource["GAPlVPtr"] = $$createField128_0($$parsedSource["GAPlVPtr"]);
            }
            if ("GAPlPPtr" in $$parsedSource) {
                $$parsedSource["GAPlPPtr"] = $$createField129_0($$parsedSource["GAPlPPtr"]);
            }
            if ("GAMi" in $$parsedSource) {
                $$parsedSource["GAMi"] = $$createField130_0($$parsedSource["GAMi"]);
            }
            if ("GAMS" in $$parsedSource) {
                $$parsedSource["GAMS"] = $$createField131_0($$parsedSource["GAMS"]);
            }
            if ("GAMV" in $$parsedSource) {
                $$parsedSource["GAMV"] = $$createField132_0($$parsedSource["GAMV"]);
            }
            if ("GAMSPtr" in $$parsedSource) {
                $$parsedSource["GAMSPtr"] = $$createField133_0($$parsedSource["GAMSPtr"]);
            }
            if ("GAMVPtr" in $$parsedSource) {
                $$parsedSource["GAMVPtr"] = $$createField134_0($$parsedSource["GAMVPtr"]);
            }
            if ("GAII" in $$parsedSource) {
                $$parsedSource["GAII"] = $$createField135_0($$parsedSource["GAII"]);
            }
            if ("GAIV" in $$parsedSource) {
                $$parsedSource["GAIV"] = $$createField136_0($$parsedSource["GAIV"]);
            }
            if ("GAIP" in $$parsedSource) {
                $$parsedSource["GAIP"] = $$createField137_0($$parsedSource["GAIP"]);
            }
            if ("GAIIPtr" in $$parsedSource) {
                $$parsedSource["GAIIPtr"] = $$createField138_0($$parsedSource["GAIIPtr"]);
            }
            if ("GAIVPtr" in $$parsedSource) {
                $$parsedSource["GAIVPtr"] = $$createField139_0($$parsedSource["GAIVPtr"]);
            }
            if ("GAIPPtr" in $$parsedSource) {
                $$parsedSource["GAIPPtr"] = $$createField140_0($$parsedSource["GAIPPtr"]);
            }
            if ("GAPrV" in $$parsedSource) {
                $$parsedSource["GAPrV"] = $$createField141_0($$parsedSource["GAPrV"]);
            }
            if ("GAPrP" in $$parsedSource) {
                $$parsedSource["GAPrP"] = $$createField142_0($$parsedSource["GAPrP"]);
            }
            if ("GAPrVPtr" in $$parsedSource) {
                $$parsedSource["GAPrVPtr"] = $$createField143_0($$parsedSource["GAPrVPtr"]);
            }
            if ("GAPrPPtr" in $$parsedSource) {
                $$parsedSource["GAPrPPtr"] = $$createField144_0($$parsedSource["GAPrPPtr"]);
            }
            return new Maps<R, S, T, U, V, W, X, Y, Z>($$parsedSource as Partial<Maps<R, S, T, U, V, W, X, Y, Z>>);
        };
    }
}

export type MixedCstrAlias<X> = X;

export type NonBasicCstrAlias<V> = V;

export type PointableCstrAlias<W> = W;

export type PointerAlias = PointerTextMarshaler;

export type PointerTextMarshaler = string;

export type StringAlias = string;

export type StringType = string;

export type ValueAlias = ValueTextMarshaler;

export type ValueTextMarshaler = string;

// Private type creation functions
const $$createType0 = $Create.Map($Create.Any, $Create.Any);
const $$createType1 = $Create.Map($Create.Any, $Create.Any);
const $$createType2 = $Create.Map($Create.Any, $Create.Any);
const $$createType3 = $Create.Map($Create.Any, $Create.Any);
const $$createType4 = $Create.Map($Create.Any, $Create.Any);
const $$createType5 = $Create.Map($Create.Any, $Create.Any);
const $$createType6 = $Create.Map($Create.Any, $Create.Any);
const $$createType7 = $Create.Map($Create.Any, $Create.Any);
const $$createType8 = $Create.Map($Create.Any, $Create.Any);
const $$createType9 = $Create.Map($Create.Any, $Create.Any);
const $$createType10 = $Create.Map($Create.Any, $Create.Any);
const $$createType11 = $Create.Map($Create.Any, $Create.Any);
const $$createType12 = $Create.Map($Create.Any, $Create.Any);
const $$createType13 = $Create.Map($Create.Any, $Create.Any);
const $$createType14 = $Create.Map($Create.Any, $Create.Any);
const $$createType15 = $Create.Map($Create.Any, $Create.Any);
const $$createType16 = $Create.Map($Create.Any, $Create.Any);
const $$createType17 = $Create.Map($Create.Any, $Create.Any);
const $$createType18 = $Create.Map($Create.Any, $Create.Any);
const $$createType19 = $Create.Map($Create.Any, $Create.Any);
const $$createType20 = $Create.Map($Create.Any, $Create.Any);
const $$createType21 = $Create.Map($Create.Any, $Create.Any);
const $$createType22 = $Create.Map($Create.Any, $Create.Any);
const $$createType23 = $Create.Map($Create.Any, $Create.Any);
const $$createType24 = $Create.Map($Create.Any, $Create.Any);
const $$createType25 = $Create.Map($Create.Any, $Create.Any);
const $$createType26 = $Create.Map($Create.Any, $Create.Any);
const $$createType27 = $Create.Map($Create.Any, $Create.Any);
const $$createType28 = $Create.Map($Create.Any, $Create.Any);
const $$createType29 = $Create.Map($Create.Any, $Create.Any);
const $$createType30 = $Create.Map($Create.Any, $Create.Any);
const $$createType31 = $Create.Map($Create.Any, $Create.Any);
const $$createType32 = $Create.Map($Create.Any, $Create.Any);
const $$createType33 = $Create.Map($Create.Any, $Create.Any);
const $$createType34 = $Create.Map($Create.Any, $Create.Any);
const $$createType35 = $Create.Map($Create.Any, $Create.Any);
const $$createType36 = $Create.Map($Create.Any, $Create.Any);
const $$createType37 = $Create.Map($Create.Any, $Create.Any);
const $$createType38 = $Create.Map($Create.Any, $Create.Any);
const $$createType39 = $Create.Map($Create.Any, $Create.Any);
const $$createType40 = $Create.Map($Create.Any, $Create.Any);
const $$createType41 = $Create.Map($Create.Any, $Create.Any);
const $$createType42 = $Create.Map($Create.Any, $Create.Any);
const $$createType43 = $Create.Map($Create.Any, $Create.Any);
const $$createType44 = $Create.Map($Create.Any, $Create.Any);
const $$createType45 = $Create.Map($Create.Any, $Create.Any);
const $$createType46 = $Create.Map($Create.Any, $Create.Any);
const $$createType47 = $Create.Map($Create.Any, $Create.Any);
const $$createType48 = $Create.Map($Create.Any, $Create.Any);
const $$createType49 = $Create.Map($Create.Any, $Create.Any);
const $$createType50 = $Create.Map($Create.Any, $Create.Any);
const $$createType51 = $Create.Map($Create.Any, $Create.Any);
const $$createType52 = $Create.Map($Create.Any, $Create.Any);
const $$createType53 = $Create.Map($Create.Any, $Create.Any);
const $$createType54 = $Create.Map($Create.Any, $Create.Any);
const $$createType55 = $Create.Map($Create.Any, $Create.Any);
const $$createType56 = $Create.Map($Create.Any, $Create.Any);
const $$createType57 = $Create.Map($Create.Any, $Create.Any);
const $$createType58 = $Create.Map($Create.Any, $Create.Any);
const $$createType59 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType60 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType61 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType62 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType63 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType64 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType65 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType66 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType67 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType68 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType69 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType70 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType71 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType72 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType73 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType74 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType75 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType76 = ($$createParamR: any, $$createParamS: any, $$createParamT: any, $$createParamU: any, $$createParamV: any, $$createParamW: any, $$createParamX: any, $$createParamY: any, $$createParamZ: any) => $Create.Map($Create.Any, $Create.Any);
const $$createType77 = $Create.Map($Create.Any, $Create.Any);
const $$createType78 = $Create.Map($Create.Any, $Create.Any);
const $$createType79 = $Create.Map($Create.Any, $Create.Any);
