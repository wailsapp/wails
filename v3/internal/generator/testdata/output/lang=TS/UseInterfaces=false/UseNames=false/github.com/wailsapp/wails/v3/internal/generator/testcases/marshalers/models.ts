// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "/wails/runtime.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as encoding$0 from "../../../../../../../../encoding/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as json$0 from "../../../../../../../../encoding/json/models.js";

/**
 * any
 */
export type AliasJsonMarshaler = any;

/**
 * any
 */
export type AliasMarshaler = any;

/**
 * struct{}
 */
export interface AliasNonMarshaler {
}

/**
 * string
 */
export type AliasTextMarshaler = string;

export class Data {
    "NM": NonMarshaler;

    /**
     * NonMarshaler | null
     */
    "NMPtr": NonMarshaler | null;
    "VJM": ValueJsonMarshaler;

    /**
     * ValueJsonMarshaler | null
     */
    "VJMPtr": ValueJsonMarshaler | null;
    "PJM": PointerJsonMarshaler;

    /**
     * PointerJsonMarshaler | null
     */
    "PJMPtr": PointerJsonMarshaler | null;
    "VTM": ValueTextMarshaler;

    /**
     * ValueTextMarshaler | null
     */
    "VTMPtr": ValueTextMarshaler | null;
    "PTM": PointerTextMarshaler;

    /**
     * PointerTextMarshaler | null
     */
    "PTMPtr": PointerTextMarshaler | null;
    "VM": ValueMarshaler;

    /**
     * ValueMarshaler | null
     */
    "VMPtr": ValueMarshaler | null;
    "PM": PointerMarshaler;

    /**
     * PointerMarshaler | null
     */
    "PMPtr": PointerMarshaler | null;
    "UJM": UnderlyingJsonMarshaler;

    /**
     * UnderlyingJsonMarshaler | null
     */
    "UJMPtr": UnderlyingJsonMarshaler | null;
    "UTM": UnderlyingTextMarshaler;

    /**
     * UnderlyingTextMarshaler | null
     */
    "UTMPtr": UnderlyingTextMarshaler | null;
    "UM": UnderlyingMarshaler;

    /**
     * UnderlyingMarshaler | null
     */
    "UMPtr": UnderlyingMarshaler | null;

    /**
     * any
     */
    "JM": any;

    /**
     * any | null
     */
    "JMPtr": any | null;

    /**
     * string
     */
    "TM": string;

    /**
     * string | null
     */
    "TMPtr": string | null;

    /**
     * any
     */
    "CJM": any;

    /**
     * any | null
     */
    "CJMPtr": any | null;

    /**
     * string
     */
    "CTM": string;

    /**
     * string | null
     */
    "CTMPtr": string | null;

    /**
     * any
     */
    "CM": any;

    /**
     * any | null
     */
    "CMPtr": any | null;
    "ANM": AliasNonMarshaler;

    /**
     * AliasNonMarshaler | null
     */
    "ANMPtr": AliasNonMarshaler | null;
    "AJM": AliasJsonMarshaler;

    /**
     * AliasJsonMarshaler | null
     */
    "AJMPtr": AliasJsonMarshaler | null;
    "ATM": AliasTextMarshaler;

    /**
     * AliasTextMarshaler | null
     */
    "ATMPtr": AliasTextMarshaler | null;
    "AM": AliasMarshaler;

    /**
     * AliasMarshaler | null
     */
    "AMPtr": AliasMarshaler | null;
    "ImJM": ImplicitJsonMarshaler;

    /**
     * ImplicitJsonMarshaler | null
     */
    "ImJMPtr": ImplicitJsonMarshaler | null;
    "ImTM": ImplicitTextMarshaler;

    /**
     * ImplicitTextMarshaler | null
     */
    "ImTMPtr": ImplicitTextMarshaler | null;
    "ImM": ImplicitMarshaler;

    /**
     * ImplicitMarshaler | null
     */
    "ImMPtr": ImplicitMarshaler | null;
    "ImNJ": ImplicitNonJson;

    /**
     * ImplicitNonJson | null
     */
    "ImNJPtr": ImplicitNonJson | null;
    "ImNT": ImplicitNonText;

    /**
     * ImplicitNonText | null
     */
    "ImNTPtr": ImplicitNonText | null;
    "ImNM": ImplicitNonMarshaler;

    /**
     * ImplicitNonMarshaler | null
     */
    "ImNMPtr": ImplicitNonMarshaler | null;
    "ImJbT": ImplicitJsonButText;

    /**
     * ImplicitJsonButText | null
     */
    "ImJbTPtr": ImplicitJsonButText | null;
    "ImTbJ": ImplicitTextButJson;

    /**
     * ImplicitTextButJson | null
     */
    "ImTbJPtr": ImplicitTextButJson | null;

    /** Creates a new Data instance. */
    constructor($$source: Partial<Data> = {}) {
        if (!("NM" in $$source)) {
            this["NM"] = (new NonMarshaler());
        }
        if (!("NMPtr" in $$source)) {
            this["NMPtr"] = null;
        }
        if (!("VJM" in $$source)) {
            this["VJM"] = null;
        }
        if (!("VJMPtr" in $$source)) {
            this["VJMPtr"] = null;
        }
        if (!("PJM" in $$source)) {
            this["PJM"] = null;
        }
        if (!("PJMPtr" in $$source)) {
            this["PJMPtr"] = null;
        }
        if (!("VTM" in $$source)) {
            this["VTM"] = "";
        }
        if (!("VTMPtr" in $$source)) {
            this["VTMPtr"] = null;
        }
        if (!("PTM" in $$source)) {
            this["PTM"] = "";
        }
        if (!("PTMPtr" in $$source)) {
            this["PTMPtr"] = null;
        }
        if (!("VM" in $$source)) {
            this["VM"] = null;
        }
        if (!("VMPtr" in $$source)) {
            this["VMPtr"] = null;
        }
        if (!("PM" in $$source)) {
            this["PM"] = null;
        }
        if (!("PMPtr" in $$source)) {
            this["PMPtr"] = null;
        }
        if (!("UJM" in $$source)) {
            this["UJM"] = null;
        }
        if (!("UJMPtr" in $$source)) {
            this["UJMPtr"] = null;
        }
        if (!("UTM" in $$source)) {
            this["UTM"] = "";
        }
        if (!("UTMPtr" in $$source)) {
            this["UTMPtr"] = null;
        }
        if (!("UM" in $$source)) {
            this["UM"] = null;
        }
        if (!("UMPtr" in $$source)) {
            this["UMPtr"] = null;
        }
        if (!("JM" in $$source)) {
            this["JM"] = null;
        }
        if (!("JMPtr" in $$source)) {
            this["JMPtr"] = null;
        }
        if (!("TM" in $$source)) {
            this["TM"] = "";
        }
        if (!("TMPtr" in $$source)) {
            this["TMPtr"] = null;
        }
        if (!("CJM" in $$source)) {
            this["CJM"] = null;
        }
        if (!("CJMPtr" in $$source)) {
            this["CJMPtr"] = null;
        }
        if (!("CTM" in $$source)) {
            this["CTM"] = "";
        }
        if (!("CTMPtr" in $$source)) {
            this["CTMPtr"] = null;
        }
        if (!("CM" in $$source)) {
            this["CM"] = null;
        }
        if (!("CMPtr" in $$source)) {
            this["CMPtr"] = null;
        }
        if (!("ANM" in $$source)) {
            this["ANM"] = {};
        }
        if (!("ANMPtr" in $$source)) {
            this["ANMPtr"] = null;
        }
        if (!("AJM" in $$source)) {
            this["AJM"] = null;
        }
        if (!("AJMPtr" in $$source)) {
            this["AJMPtr"] = null;
        }
        if (!("ATM" in $$source)) {
            this["ATM"] = "";
        }
        if (!("ATMPtr" in $$source)) {
            this["ATMPtr"] = null;
        }
        if (!("AM" in $$source)) {
            this["AM"] = null;
        }
        if (!("AMPtr" in $$source)) {
            this["AMPtr"] = null;
        }
        if (!("ImJM" in $$source)) {
            this["ImJM"] = null;
        }
        if (!("ImJMPtr" in $$source)) {
            this["ImJMPtr"] = null;
        }
        if (!("ImTM" in $$source)) {
            this["ImTM"] = "";
        }
        if (!("ImTMPtr" in $$source)) {
            this["ImTMPtr"] = null;
        }
        if (!("ImM" in $$source)) {
            this["ImM"] = null;
        }
        if (!("ImMPtr" in $$source)) {
            this["ImMPtr"] = null;
        }
        if (!("ImNJ" in $$source)) {
            this["ImNJ"] = "";
        }
        if (!("ImNJPtr" in $$source)) {
            this["ImNJPtr"] = null;
        }
        if (!("ImNT" in $$source)) {
            this["ImNT"] = null;
        }
        if (!("ImNTPtr" in $$source)) {
            this["ImNTPtr"] = null;
        }
        if (!("ImNM" in $$source)) {
            this["ImNM"] = (new ImplicitNonMarshaler());
        }
        if (!("ImNMPtr" in $$source)) {
            this["ImNMPtr"] = null;
        }
        if (!("ImJbT" in $$source)) {
            this["ImJbT"] = null;
        }
        if (!("ImJbTPtr" in $$source)) {
            this["ImJbTPtr"] = null;
        }
        if (!("ImTbJ" in $$source)) {
            this["ImTbJ"] = null;
        }
        if (!("ImTbJPtr" in $$source)) {
            this["ImTbJPtr"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Data instance from a string or object.
     */
    static createFrom($$source: any = {}): Data {
        const $$createField0_0 = $$createType0;
        const $$createField1_0 = $$createType1;
        const $$createField48_0 = $$createType2;
        const $$createField49_0 = $$createType3;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("NM" in $$parsedSource) {
            $$parsedSource["NM"] = $$createField0_0($$parsedSource["NM"]);
        }
        if ("NMPtr" in $$parsedSource) {
            $$parsedSource["NMPtr"] = $$createField1_0($$parsedSource["NMPtr"]);
        }
        if ("ImNM" in $$parsedSource) {
            $$parsedSource["ImNM"] = $$createField48_0($$parsedSource["ImNM"]);
        }
        if ("ImNMPtr" in $$parsedSource) {
            $$parsedSource["ImNMPtr"] = $$createField49_0($$parsedSource["ImNMPtr"]);
        }
        return new Data($$parsedSource as Partial<Data>);
    }
}

/**
 * any
 */
export type ImplicitJsonButText = any;

/**
 * any
 */
export type ImplicitJsonMarshaler = any;

/**
 * any
 */
export type ImplicitMarshaler = any;

/**
 * string
 */
export type ImplicitNonJson = string;

/**
 * class{ Marshaler, TextMarshaler }
 */
export class ImplicitNonMarshaler {
    "Marshaler": json$0.Marshaler;
    "TextMarshaler": encoding$0.TextMarshaler;

    /** Creates a new ImplicitNonMarshaler instance. */
    constructor($$source: Partial<ImplicitNonMarshaler> = {}) {
        if (!("Marshaler" in $$source)) {
            this["Marshaler"] = null;
        }
        if (!("TextMarshaler" in $$source)) {
            this["TextMarshaler"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ImplicitNonMarshaler instance from a string or object.
     */
    static createFrom($$source: any = {}): ImplicitNonMarshaler {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new ImplicitNonMarshaler($$parsedSource as Partial<ImplicitNonMarshaler>);
    }
}

/**
 * any
 */
export type ImplicitNonText = any;

/**
 * any
 */
export type ImplicitTextButJson = any;

/**
 * string
 */
export type ImplicitTextMarshaler = string;

/**
 * class {}
 */
export class NonMarshaler {

    /** Creates a new NonMarshaler instance. */
    constructor($$source: Partial<NonMarshaler> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new NonMarshaler instance from a string or object.
     */
    static createFrom($$source: any = {}): NonMarshaler {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new NonMarshaler($$parsedSource as Partial<NonMarshaler>);
    }
}

/**
 * any
 */
export type PointerJsonMarshaler = any;

/**
 * any
 */
export type PointerMarshaler = any;

/**
 * string
 */
export type PointerTextMarshaler = string;

/**
 * any
 */
export type UnderlyingJsonMarshaler = any;

/**
 * any
 */
export type UnderlyingMarshaler = any;

/**
 * string
 */
export type UnderlyingTextMarshaler = string;

/**
 * any
 */
export type ValueJsonMarshaler = any;

/**
 * any
 */
export type ValueMarshaler = any;

/**
 * string
 */
export type ValueTextMarshaler = string;

// Private type creation functions
const $$createType0 = NonMarshaler.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = ImplicitNonMarshaler.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
