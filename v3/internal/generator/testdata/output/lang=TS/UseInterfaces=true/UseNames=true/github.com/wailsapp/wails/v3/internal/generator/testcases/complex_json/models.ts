// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

export interface Embedded1 {
    /**
     * Friends should be shadowed in Person by a field of lesser depth
     */
    "Friends": number;

    /**
     * Vanish should be omitted from Person because there is another field with same depth and no tag
     */
    "Vanish": number;

    /**
     * StillThere should be shadowed in Person by other field with same depth and a json tag
     */
    "StillThere": string;

    /**
     * NamingThingsIsHard is a law of programming
     */
    "NamingThingsIsHard": `${boolean}`;
}

export type Embedded3 = string;

/**
 * Person represents a person
 */
export interface Person {
    /**
     * Titles is optional in JSON
     */
    "Titles"?: Title[] | null;

    /**
     * Names has a
     * multiline comment
     */
    "Names": string[] | null;

    /**
     * Partner has a custom and complex JSON key
     */
    "Partner": Person | null;
    "Friends": (Person | null)[] | null;

    /**
     * NamingThingsIsHard is a law of programming
     */
    "NamingThingsIsHard": `${boolean}`;

    /**
     * StillThereButRenamed should shadow in Person the other field with same depth and no json tag
     */
    "StillThere": Embedded3 | null;

    /**
     * StrangeNumber maps to "-"
     */
    "-": number;

    /**
     * Embedded3 should appear with key "Embedded3"
     */
    "Embedded3": Embedded3;

    /**
     * StrangerNumber is serialized as a string
     */
    "StrangerNumber": `${number}`;

    /**
     * StrangestString is optional and serialized as a JSON string
     */
    "StrangestString"?: `"${string}"`;

    /**
     * StringStrangest is serialized as a JSON string and optional
     */
    "StringStrangest"?: `"${string}"`;

    /**
     * embedded4 should be optional and appear with key "emb4"
     */
    "emb4"?: embedded4;
}

/**
 * Title is a title
 */
export enum Title {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = "",

    /**
     * Mister is a title
     */
    Mister = "Mr",
    Miss = "Miss",
    Ms = "Ms",
    Mrs = "Mrs",
    Dr = "Dr",
};

export interface embedded4 {
    /**
     * NamingThingsIsHard is a law of programming
     */
    "NamingThingsIsHard": `${boolean}`;

    /**
     * Friends should not be shadowed in Person as embedded4 is not embedded
     * from encoding/json's point of view;
     * however, it should be shadowed in Embedded1
     */
    "Friends": boolean;
}
