// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

export type EmbeddedCustomInterface = string;

export type EmbeddedOriginalInterface = string;

export type EmbeddedPointer = string;

export type EmbeddedPointerPtr = string;

export type EmbeddedValue = string;

export type EmbeddedValuePtr = string;

export interface Maps<R, S, T, U, V, W, X, Y, Z> {
    /**
     * Reject
     */
    "Bool": { [_: string]: number } | null;

    /**
     * Accept
     */
    "Int": { [_: `${number}`]: number } | null;

    /**
     * Accept
     */
    "Uint": { [_: `${number}`]: number } | null;

    /**
     * Reject
     */
    "Float": { [_: string]: number } | null;

    /**
     * Reject
     */
    "Complex": { [_: string]: number } | null;

    /**
     * Accept
     */
    "Byte": { [_: `${number}`]: number } | null;

    /**
     * Accept
     */
    "Rune": { [_: `${number}`]: number } | null;

    /**
     * Accept
     */
    "String": { [_: string]: number } | null;

    /**
     * Reject
     */
    "IntPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "UintPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "FloatPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "ComplexPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "StringPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "NTM": { [_: string]: number } | null;

    /**
     * Reject
     */
    "NTMPtr": { [_: string]: number } | null;

    /**
     * Accept
     */
    "VTM": { [_: ValueTextMarshaler]: number } | null;

    /**
     * Accept
     */
    "VTMPtr": { [_: ValueTextMarshaler]: number } | null;

    /**
     * Reject
     */
    "PTM": { [_: string]: number } | null;

    /**
     * Accept
     */
    "PTMPtr": { [_: PointerTextMarshaler]: number } | null;

    /**
     * Accept, hide
     */
    "JTM": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "JTMPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "A": { [_: string]: number } | null;

    /**
     * Reject
     */
    "APtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "TM": { [_: string]: number } | null;

    /**
     * Reject
     */
    "TMPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "CI": { [_: string]: number } | null;

    /**
     * Reject
     */
    "CIPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "EI": { [_: string]: number } | null;

    /**
     * Reject
     */
    "EIPtr": { [_: string]: number } | null;

    /**
     * Accept
     */
    "EV": { [_: EmbeddedValue]: number } | null;

    /**
     * Accept
     */
    "EVPtr": { [_: EmbeddedValue]: number } | null;

    /**
     * Accept
     */
    "EVP": { [_: EmbeddedValuePtr]: number } | null;

    /**
     * Accept
     */
    "EVPPtr": { [_: EmbeddedValuePtr]: number } | null;

    /**
     * Reject
     */
    "EP": { [_: string]: number } | null;

    /**
     * Accept
     */
    "EPPtr": { [_: EmbeddedPointer]: number } | null;

    /**
     * Accept
     */
    "EPP": { [_: EmbeddedPointerPtr]: number } | null;

    /**
     * Accept
     */
    "EPPPtr": { [_: EmbeddedPointerPtr]: number } | null;

    /**
     * Accept
     */
    "ECI": { [_: EmbeddedCustomInterface]: number } | null;

    /**
     * Accept
     */
    "ECIPtr": { [_: EmbeddedCustomInterface]: number } | null;

    /**
     * Accept
     */
    "EOI": { [_: EmbeddedOriginalInterface]: number } | null;

    /**
     * Accept
     */
    "EOIPtr": { [_: EmbeddedOriginalInterface]: number } | null;

    /**
     * Reject
     */
    "WT": { [_: string]: number } | null;

    /**
     * Reject
     */
    "WA": { [_: string]: number } | null;

    /**
     * Accept
     */
    "ST": { [_: StringType]: number } | null;

    /**
     * Accept
     */
    "SA": { [_: StringAlias]: number } | null;

    /**
     * Accept
     */
    "IntT": { [_: `${number}`]: number } | null;

    /**
     * Accept
     */
    "IntA": { [_: `${number}`]: number } | null;

    /**
     * Reject
     */
    "VT": { [_: string]: number } | null;

    /**
     * Reject
     */
    "VTPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "VPT": { [_: string]: number } | null;

    /**
     * Reject
     */
    "VPTPtr": { [_: string]: number } | null;

    /**
     * Accept
     */
    "VA": { [_: ValueAlias]: number } | null;

    /**
     * Accept
     */
    "VAPtr": { [_: ValueAlias]: number } | null;

    /**
     * Accept, hide
     */
    "VPA": { [_: string]: number } | null;

    /**
     * Reject
     */
    "VPAPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "PT": { [_: string]: number } | null;

    /**
     * Reject
     */
    "PTPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "PPT": { [_: string]: number } | null;

    /**
     * Reject
     */
    "PPTPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "PA": { [_: string]: number } | null;

    /**
     * Accept
     */
    "PAPtr": { [_: PointerAlias]: number } | null;

    /**
     * Accept, hide
     */
    "PPA": { [_: string]: number } | null;

    /**
     * Reject
     */
    "PPAPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "IT": { [_: string]: number } | null;

    /**
     * Reject
     */
    "ITPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "IPT": { [_: string]: number } | null;

    /**
     * Reject
     */
    "IPTPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "IA": { [_: string]: number } | null;

    /**
     * Reject
     */
    "IAPtr": { [_: string]: number } | null;

    /**
     * Reject
     */
    "IPA": { [_: string]: number } | null;

    /**
     * Reject
     */
    "IPAPtr": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPR": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPRPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "TPS": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPSPtr": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPT": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPTPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "TPU": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPUPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "TPV": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPVPtr": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPW": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "TPWPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "TPX": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPXPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "TPY": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPYPtr": { [_: string]: number } | null;

    /**
     * Accept, hide
     */
    "TPZ": { [_: string]: number } | null;

    /**
     * Soft reject
     */
    "TPZPtr": { [_: string]: number } | null;
}

export type PointerAlias = PointerTextMarshaler;

export type PointerTextMarshaler = string;

export type StringAlias = string;

export type StringType = string;

export type ValueAlias = ValueTextMarshaler;

export type ValueTextMarshaler = string;
