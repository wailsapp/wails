{{$renderer := .}}
{{- $useInterfaces := .UseInterfaces}}
{{- $models := (fixext .ModelsFile)}}
{{- if not .TS -}}
// @ts-check
{{end -}}
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
{{$hasDocs := false}}
{{- range .Package.Docs}}
{{- if hasdoc .}}{{$hasDocs := true}}{{break}}{{end}}
{{- end}}
{{- if $hasDocs}}
/**
{{- range .Package.Docs}}
{{- jsdoc .Text ""}}
{{- end}}
 * @module
 */
{{end}}
{{- if .Services}}
{{- range .Services}}{{if .Internal}}{{break}}{{end}}
import * as {{jsid .Name}} from "./{{js (fixext ($renderer.ServiceFile .Name))}}";
{{- end}}
export {
{{- range $i, $service := .Services}}
    {{- if .Internal}}{{break}}{{end}}
    {{- if gt $i 0}},{{end}}
    {{jsid .Name}}
{{- end}}
};
{{end}}

{{- $hasObjects := false}}
{{- $hasTypes := false}}

{{- range $model := .Models}}
{{- if $model.Internal}}{{break}}{{end}}

{{- $info := modelinfo $model $useInterfaces }}

{{- if or $info.HasValues $info.IsClassAlias $info.IsClass}}
{{- if not $hasObjects}}
    {{- $hasObjects = true}}
export {
{{- else}},{{end}}
    {{jsid $model.Name}}
{{- else}}
    {{- $hasTypes = true}}
{{- end}}
{{- end}}
{{- if $hasObjects}}
} from "./{{js $models}}";
{{end}}

{{- if $hasTypes}}
{{- $hasTypes = false}}

{{- if .TS}}
export type {
{{- else}}
import * as $models from "./{{js $models}}";
{{end}}
{{- range $model := .Models}}
{{- if $model.Internal}}{{break}}{{end}}

{{- $info := modelinfo $model $useInterfaces }}
{{- $template := $info.Template }}

{{- if or $info.HasValues $info.IsClassAlias $info.IsClass}}{{continue}}{{end}}

{{- if $renderer.TS}}
    {{- if $hasTypes}},{{end}}
    {{jsid $model.Name}}
{{- else}}
/**
{{- if hasdoc $model.Decl.Doc}}
{{- jsdoc $model.Decl.Doc.Text ""}}{{if hasdoc $model.Doc}}
 *{{end}}
{{- end}}
{{- if hasdoc $model.Doc}}
{{- jsdoc $model.Doc.Text ""}}
{{- end}}
{{- if $template.ParamList}}
 * @template {{$template.Params}}
{{- end}}
 * @typedef {$models.{{jsid $model.Name}}{{$template.ParamList -}} } {{jsid $model.Name}}
 */
{{end}}

{{- $hasTypes = true}}
{{- end}}

{{- if .TS}}
} from "./{{js $models}}";
{{end}}

{{- end}}
{{- range .Package.Injections}}
{{.}}
{{- end}}{{if .Package.Injections}}
{{end -}}
